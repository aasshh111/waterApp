Index: app/src/main/java/com/example/water_app/main/HomeFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.main\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.viewpager2.widget.ViewPager2\r\nimport com.example.water_app.R\r\nimport com.example.water_app.databinding.FragmentHomeBinding\r\nimport com.example.water_app.home.SubmitActivity\r\nimport com.example.water_app.recyclerview.HomeAdapter\r\nimport com.example.water_app.recyclerview.MyViewPagerAdapter\r\nimport com.example.water_app.recyclerview.ViewPagerAdapter\r\nimport com.example.water_app.vo.HomeData\r\n\r\nclass HomeFragment : Fragment() {\r\n\r\n    // 뷰바인딩\r\n    private lateinit var binding: FragmentHomeBinding\r\n\r\n    // MainActivity 가져오기\r\n    lateinit var mainActivity: MainActivity\r\n\r\n    //뷰페이저\r\n    private val sliderImageHandler: Handler = Handler()\r\n    private val sliderImageRunnable = Runnable { binding.ivBanner.currentItem = binding.ivBanner.currentItem + 1 }\r\n\r\n\r\n\r\n\r\n    private fun getAespaMembers(): ArrayList<Int> {\r\n        return arrayListOf<Int>(\r\n            R.drawable.banner1,\r\n            R.drawable.store2,\r\n            R.drawable.store3,\r\n            R.drawable.store4)\r\n    }\r\n\r\n    // context를 mainActivity에 담음\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n\r\n        mainActivity = context as MainActivity\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        // 뷰바인딩\r\n        binding = FragmentHomeBinding.inflate(inflater, container, false)\r\n\r\n        //뷰페이저\r\n//        binding.ivBanner.adapter = MyViewPagerAdapter(getAespaMembers()) // 어댑터 생성\r\n//        binding.ivBanner.orientation = ViewPager2.ORIENTATION_HORIZONTAL // 방향을 가로로\r\n\r\n        val imageList = arrayListOf<Int>().apply {\r\n            for (i in 0..2) {\r\n                add(R.drawable.banner1)\r\n            }\r\n        }\r\n\r\n        val pageMarginPx = resources.getDimensionPixelOffset(R.dimen.pageMargin)\r\n        val pagerWidth = resources.getDimensionPixelOffset(R.dimen.pageWidth)\r\n        val screenWidth = resources.displayMetrics.widthPixels\r\n        val offsetPx = screenWidth - pageMarginPx - pagerWidth\r\n\r\n        binding.ivBanner.apply {\r\n            adapter = ViewPagerAdapter(imageList, binding.ivBanner)\r\n            offscreenPageLimit = 1\r\n            getChildAt(0).overScrollMode = RecyclerView.OVER_SCROLL_NEVER\r\n            registerOnPageChangeCallback(object : ViewPager2.OnPageChangeCallback() {\r\n                override fun onPageSelected(position: Int) {\r\n                    super.onPageSelected(position)\r\n                    sliderImageHandler.removeCallbacks(sliderImageRunnable)\r\n                    sliderImageHandler.postDelayed(sliderImageRunnable, 3000)\r\n                }\r\n            })\r\n            setPageTransformer { page, position ->\r\n                page.translationX = position * -offsetPx\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // MainActivity 담음\r\n        mainActivity = context as MainActivity\r\n\r\n        val homeList = arrayListOf(\r\n            HomeData(R.drawable.my_document, \"제목1\", \"100만원\", \"10%\"),\r\n            HomeData(R.drawable.my_document, \"제목2\", \"200만원\", \"20%\"),\r\n            HomeData(R.drawable.my_document, \"제목3\", \"300만원\", \"30%\"),\r\n            HomeData(R.drawable.my_document, \"제목4\", \"400만원\", \"40%\")\r\n        )\r\n\r\n\r\n        binding.rvDonation.layoutManager = LinearLayoutManager(requireContext(), LinearLayoutManager.HORIZONTAL, false)\r\n        binding.rvDonation.setHasFixedSize(true)\r\n        binding.rvDonation.adapter = HomeAdapter(requireContext(), homeList)\r\n\r\n        // OnClickListener\r\n        val adapter = HomeAdapter(requireContext(), homeList)\r\n\r\n        adapter.setItemClickListener(object : HomeAdapter.OnItemClickListener{\r\n            override fun onClick(v: View, position: Int) {\r\n                activity?.let{\r\n                    val intent = Intent(context, SubmitActivity::class.java)\r\n                    startActivity(intent)\r\n                }\r\n            }\r\n        })\r\n\r\n        binding.rvDonation.adapter = adapter\r\n\r\n        // 카테고리\r\n        binding.btnChild.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n        binding.btnOld.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n        binding.btnDisabled.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n        binding.btnAnimal.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n        binding.btnEtc.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n\r\n        return binding.root\r\n    }\r\n    //뷰페이저\r\n    override fun onResume() {\r\n        super.onResume()\r\n        sliderImageHandler.postDelayed(sliderImageRunnable, 1000)\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        sliderImageHandler.removeCallbacks(sliderImageRunnable)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/main/HomeFragment.kt b/app/src/main/java/com/example/water_app/main/HomeFragment.kt
--- a/app/src/main/java/com/example/water_app/main/HomeFragment.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
+++ b/app/src/main/java/com/example/water_app/main/HomeFragment.kt	(date 1672729348762)
@@ -4,19 +4,27 @@
 import android.content.Intent
 import android.os.Bundle
 import android.os.Handler
+import android.util.Log
 import androidx.fragment.app.Fragment
 import android.view.LayoutInflater
 import android.view.View
 import android.view.ViewGroup
+import android.widget.Toast
+import androidx.lifecycle.Observer
+import androidx.lifecycle.ViewModelProvider
 import androidx.recyclerview.widget.LinearLayoutManager
 import androidx.recyclerview.widget.RecyclerView
 import androidx.viewpager2.widget.ViewPager2
 import com.example.water_app.R
 import com.example.water_app.databinding.FragmentHomeBinding
 import com.example.water_app.home.SubmitActivity
+import com.example.water_app.recyclerview.HistoryAdapter
 import com.example.water_app.recyclerview.HomeAdapter
 import com.example.water_app.recyclerview.MyViewPagerAdapter
 import com.example.water_app.recyclerview.ViewPagerAdapter
+import com.example.water_app.repository.Repository
+import com.example.water_app.viewmodel.MainViewModel
+import com.example.water_app.viewmodel.MainViewModelFactory
 import com.example.water_app.vo.HomeData
 
 class HomeFragment : Fragment() {
@@ -27,6 +35,9 @@
     // MainActivity 가져오기
     lateinit var mainActivity: MainActivity
 
+    //뷰 모델 가져오기
+    private lateinit var viewModel : MainViewModel
+
     //뷰페이저
     private val sliderImageHandler: Handler = Handler()
     private val sliderImageRunnable = Runnable { binding.ivBanner.currentItem = binding.ivBanner.currentItem + 1 }
@@ -93,31 +104,62 @@
         // MainActivity 담음
         mainActivity = context as MainActivity
 
-        val homeList = arrayListOf(
-            HomeData(R.drawable.my_document, "제목1", "100만원", "10%"),
-            HomeData(R.drawable.my_document, "제목2", "200만원", "20%"),
-            HomeData(R.drawable.my_document, "제목3", "300만원", "30%"),
-            HomeData(R.drawable.my_document, "제목4", "400만원", "40%")
-        )
+        //데이터담은
+        //리사이클러뷰
+
+        val repository = Repository()
+        val viewModelFactory = MainViewModelFactory(repository)
+
+        viewModel = ViewModelProvider(this,viewModelFactory).get(MainViewModel::class.java)
+        viewModel.getHomeList()
+        viewModel.homeResponse.observe(viewLifecycleOwner, Observer {
+            // 통신 성공
+            if(it.isSuccessful){
+                val homeList = it.body()
+                Log.d("-----------------","${homeList.toString()}")
+                //리사이클러뷰
+//                binding.rvDonation.layoutManager = LinearLayoutManager(requireContext(), LinearLayoutManager.VERTICAL, false)
+//                binding.rvDonation.setHasFixedSize(true)  // 성능 개선
+//                binding.rvDonation.adapter = HistoryAdapter(requireContext(), homeList)
+
+//                binding.rvDonation.layoutManager = LinearLayoutManager(requireContext(), LinearLayoutManager.HORIZONTAL, false)
+//                binding.rvDonation.setHasFixedSize(true)
+//                binding.rvDonation.adapter = HomeAdapter(requireContext(), homeList)
+//
+//                val adapter = HomeAdapter(requireContext(), homeList)
+//
+//                adapter.setItemClickListener(object : HomeAdapter.OnItemClickListener{
+//                    override fun onClick(v: View, position: Int) {
+//                        activity?.let{
+//                            val intent = Intent(context, SubmitActivity::class.java)
+//                            startActivity(intent)
+//                        }
+//                    }
+//                })
+//
+//                binding.rvDonation.adapter = adapter
+
+            }
+            // 통신 실패
+            else{
+
+            }
+        })
+
+
 
 
-        binding.rvDonation.layoutManager = LinearLayoutManager(requireContext(), LinearLayoutManager.HORIZONTAL, false)
-        binding.rvDonation.setHasFixedSize(true)
-        binding.rvDonation.adapter = HomeAdapter(requireContext(), homeList)
+        //옛날 리사이클러뷰
+//        val homeList = arrayListOf(
+//            HomeData(R.drawable.my_document, "제목1", "100만원", "10%"),
+//            HomeData(R.drawable.my_document, "제목2", "200만원", "20%"),
+//            HomeData(R.drawable.my_document, "제목3", "300만원", "30%"),
+//            HomeData(R.drawable.my_document, "제목4", "400만원", "40%")
+//        )
+
 
         // OnClickListener
-        val adapter = HomeAdapter(requireContext(), homeList)
 
-        adapter.setItemClickListener(object : HomeAdapter.OnItemClickListener{
-            override fun onClick(v: View, position: Int) {
-                activity?.let{
-                    val intent = Intent(context, SubmitActivity::class.java)
-                    startActivity(intent)
-                }
-            }
-        })
-
-        binding.rvDonation.adapter = adapter
 
         // 카테고리
         binding.btnChild.setOnClickListener{
Index: app/src/main/java/com/example/water_app/vo/HomeData.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.vo\r\n\r\ndata class HomeData(\r\n    val img: Int,\r\n    val title: String,\r\n    val money: String,\r\n    val percent: String\r\n)\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/vo/HomeData.kt b/app/src/main/java/com/example/water_app/vo/HomeData.kt
--- a/app/src/main/java/com/example/water_app/vo/HomeData.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
+++ b/app/src/main/java/com/example/water_app/vo/HomeData.kt	(date 1672729520071)
@@ -2,7 +2,7 @@
 
 data class HomeData(
     val img: Int,
-    val title: String,
-    val money: String,
+    val cntr_ttl: String,
+    val cntr_obctr: String,
     val percent: String
 )
Index: app/src/main/java/com/example/water_app/repository/SimpleApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.repository\r\n\r\nimport com.example.water_app.vo.HistoryData\r\nimport com.example.water_app.vo.PostData\r\nimport com.example.water_app.vo.UserData\r\nimport retrofit2.Response\r\nimport retrofit2.http.GET\r\nimport retrofit2.http.Path\r\nimport retrofit2.http.Query\r\n\r\ninterface SimpleApi {\r\n    @GET(\"test2.php\")\r\n    suspend fun getUser(): Response<UserData>\r\n\r\n    @GET(\"test3.php\")\r\n    suspend fun getCntr(): Response<PostData>\r\n\r\n    @GET(\"test.php\")\r\n    suspend fun getHistory(@Query(\"use_yn\") use_yn: Char): Response<List<HistoryData>>\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/repository/SimpleApi.kt b/app/src/main/java/com/example/water_app/repository/SimpleApi.kt
--- a/app/src/main/java/com/example/water_app/repository/SimpleApi.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
+++ b/app/src/main/java/com/example/water_app/repository/SimpleApi.kt	(date 1672729302547)
@@ -1,6 +1,7 @@
 package com.example.water_app.repository
 
 import com.example.water_app.vo.HistoryData
+import com.example.water_app.vo.HomeData
 import com.example.water_app.vo.PostData
 import com.example.water_app.vo.UserData
 import retrofit2.Response
@@ -17,4 +18,7 @@
 
     @GET("test.php")
     suspend fun getHistory(@Query("use_yn") use_yn: Char): Response<List<HistoryData>>
+
+    @GET("test.php")
+    suspend fun getHomeList(): Response<List<HomeData>>
 }
\ No newline at end of file
Index: app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.viewmodel\r\n\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.example.water_app.repository.Repository\r\nimport com.example.water_app.vo.HistoryData\r\nimport com.example.water_app.vo.PostData\r\nimport com.example.water_app.vo.UserData\r\nimport kotlinx.coroutines.launch\r\nimport retrofit2.Response\r\n\r\nclass MainViewModel(private val repository : Repository) : ViewModel() {\r\n    // 데이터 처리\r\n\r\n    val myResponse : MutableLiveData<Response<UserData>> = MutableLiveData()\r\n    val cntrResponse : MutableLiveData<Response<PostData>> = MutableLiveData()\r\n    val historyResponse : MutableLiveData<Response<List<HistoryData>>> = MutableLiveData()\r\n\r\n    fun getUser() {\r\n        viewModelScope.launch {\r\n            val response = repository.getUser()\r\n            myResponse.value = response\r\n        }\r\n    }\r\n    fun getCntr() {\r\n        viewModelScope.launch {\r\n            val response = repository.getCntr()\r\n            cntrResponse.value = response\r\n        }\r\n    }\r\n    fun getHistory(use_yn: Char) {\r\n        viewModelScope.launch {\r\n            val response = repository.getHistory(use_yn)\r\n            historyResponse.value = response\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt b/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt
--- a/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
+++ b/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt	(date 1672729302542)
@@ -5,6 +5,7 @@
 import androidx.lifecycle.viewModelScope
 import com.example.water_app.repository.Repository
 import com.example.water_app.vo.HistoryData
+import com.example.water_app.vo.HomeData
 import com.example.water_app.vo.PostData
 import com.example.water_app.vo.UserData
 import kotlinx.coroutines.launch
@@ -16,6 +17,7 @@
     val myResponse : MutableLiveData<Response<UserData>> = MutableLiveData()
     val cntrResponse : MutableLiveData<Response<PostData>> = MutableLiveData()
     val historyResponse : MutableLiveData<Response<List<HistoryData>>> = MutableLiveData()
+    val homeResponse : MutableLiveData<Response<List<HomeData>>> = MutableLiveData()
 
     fun getUser() {
         viewModelScope.launch {
@@ -35,4 +37,10 @@
             historyResponse.value = response
         }
     }
+    fun getHomeList() {
+        viewModelScope.launch {
+            val response = repository.getHomeList()
+            homeResponse.value = response
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/water_app/repository/Repository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.repository\r\n\r\nimport com.example.water_app.vo.HistoryData\r\nimport com.example.water_app.vo.PostData\r\nimport com.example.water_app.vo.UserData\r\nimport retrofit2.Response\r\nimport retrofit2.http.Query\r\n\r\nclass Repository {\r\n    // ViewModel에서 사용할 데이터 통신\r\n\r\n    suspend fun getUser() : Response<UserData> {\r\n        return RetrofitInstance.api.getUser()\r\n    }\r\n\r\n    suspend fun getCntr() : Response<PostData> {\r\n        return RetrofitInstance.api.getCntr()\r\n    }\r\n\r\n    suspend fun getHistory(use_yn: Char) : Response<List<HistoryData>> {\r\n        return RetrofitInstance.api.getHistory(use_yn)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/repository/Repository.kt b/app/src/main/java/com/example/water_app/repository/Repository.kt
--- a/app/src/main/java/com/example/water_app/repository/Repository.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
+++ b/app/src/main/java/com/example/water_app/repository/Repository.kt	(date 1672729302552)
@@ -1,6 +1,7 @@
 package com.example.water_app.repository
 
 import com.example.water_app.vo.HistoryData
+import com.example.water_app.vo.HomeData
 import com.example.water_app.vo.PostData
 import com.example.water_app.vo.UserData
 import retrofit2.Response
@@ -20,4 +21,8 @@
     suspend fun getHistory(use_yn: Char) : Response<List<HistoryData>> {
         return RetrofitInstance.api.getHistory(use_yn)
     }
+
+    suspend fun getHomeList() : Response<List<HomeData>> {
+        return RetrofitInstance.api.getHomeList()
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.recyclerview\r\n\r\nimport android.content.Context\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.water_app.R\r\nimport com.example.water_app.databinding.ItemHistoryRecyclerBinding\r\nimport com.example.water_app.databinding.ItemMainRecyclerBinding\r\nimport com.example.water_app.vo.HomeData\r\n\r\nclass HomeAdapter(private val context: Context, private val donationList: ArrayList<HomeData>) : RecyclerView.Adapter<HomeAdapter.ViewHolder>() {\r\n\r\n    class ViewHolder(val binding: ItemMainRecyclerBinding) : RecyclerView.ViewHolder(binding.root)\r\n\r\n    // 아이템 레이아웃 설정\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): HomeAdapter.ViewHolder {\r\n        val binding = ItemMainRecyclerBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n        return ViewHolder(binding)\r\n    }\r\n\r\n    // 내용 입력\r\n    override fun onBindViewHolder(holder: HomeAdapter.ViewHolder, position: Int) {\r\n        holder.binding.ivImage.setImageResource(donationList.get(position).img)\r\n        holder.binding.tvTitle.text = donationList.get(position).title\r\n        holder.binding.tvMoney.text = donationList.get(position).money\r\n        holder.binding.tvPercent.text = donationList.get(position).percent\r\n\r\n        holder.itemView.setOnClickListener {\r\n            itemClickListener.onClick(it, position)\r\n        }\r\n    }\r\n\r\n    // 리스트 내 아이템 개수\r\n    override fun getItemCount(): Int {\r\n        return donationList.size\r\n    }\r\n\r\n    // OnClickListener\r\n    interface OnItemClickListener {\r\n        fun onClick(v: View, position: Int)\r\n    }\r\n\r\n    private lateinit var itemClickListener : OnItemClickListener\r\n\r\n    fun setItemClickListener(itemClickListener: OnItemClickListener) {\r\n        this.itemClickListener = itemClickListener\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt b/app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt
--- a/app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
+++ b/app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt	(date 1672729520064)
@@ -12,7 +12,7 @@
 import com.example.water_app.databinding.ItemMainRecyclerBinding
 import com.example.water_app.vo.HomeData
 
-class HomeAdapter(private val context: Context, private val donationList: ArrayList<HomeData>) : RecyclerView.Adapter<HomeAdapter.ViewHolder>() {
+class HomeAdapter(private val context: Context, private val donationList: List<HomeData>) : RecyclerView.Adapter<HomeAdapter.ViewHolder>() {
 
     class ViewHolder(val binding: ItemMainRecyclerBinding) : RecyclerView.ViewHolder(binding.root)
 
@@ -25,9 +25,9 @@
     // 내용 입력
     override fun onBindViewHolder(holder: HomeAdapter.ViewHolder, position: Int) {
         holder.binding.ivImage.setImageResource(donationList.get(position).img)
-        holder.binding.tvTitle.text = donationList.get(position).title
-        holder.binding.tvMoney.text = donationList.get(position).money
-        holder.binding.tvPercent.text = donationList.get(position).percent
+        holder.binding.tvTitle.text = donationList.get(position).cntr_ttl
+        holder.binding.tvMoney.text = donationList.get(position).cntr_obctr
+        holder.binding.tvPercent.text = donationList.get(position)?.percent
 
         holder.itemView.setOnClickListener {
             itemClickListener.onClick(it, position)
