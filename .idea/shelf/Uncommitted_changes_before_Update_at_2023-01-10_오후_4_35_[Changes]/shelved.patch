Index: app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.viewmodel\r\n\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.example.water_app.model.NoticeData\r\nimport com.example.water_app.repository.Repository\r\nimport com.example.water_app.model.PostData\r\nimport com.example.water_app.model.ReviewData\r\nimport com.example.water_app.model.UserData\r\nimport kotlinx.coroutines.launch\r\nimport retrofit2.Response\r\n\r\nclass MainViewModel(private val repository : Repository) : ViewModel() {\r\n    // 데이터 처리\r\n\r\n    val myResponse : MutableLiveData<Response<UserData>> = MutableLiveData()\r\n    val getDonationListResponse : MutableLiveData<Response<List<PostData>>> = MutableLiveData()\r\n    val noticeListResponse : MutableLiveData<Response<List<NoticeData>>> = MutableLiveData()\r\n    val getHomeEndListResponse : MutableLiveData<Response<List<PostData>>> = MutableLiveData()\r\n    val loginResponse : MutableLiveData<Response<UserData>> = MutableLiveData()\r\n    val getCategoryResponse : MutableLiveData<Response<List<PostData>>> = MutableLiveData()\r\n    val getCommunicationResponse : MutableLiveData<Response<List<ReviewData>>> = MutableLiveData()\r\n\r\n    fun getUser() {\r\n        viewModelScope.launch {\r\n            val response = repository.getUser()\r\n            myResponse.value = response\r\n        }\r\n    }\r\n    fun getDonationList() {\r\n        viewModelScope.launch {\r\n            val response = repository.getDonationList()\r\n            getDonationListResponse.value = response\r\n        }\r\n    }\r\n    fun getNoticeList() {\r\n        viewModelScope.launch {\r\n            val response = repository.getNoticeList()\r\n            noticeListResponse.value = response\r\n        }\r\n    }\r\n    fun getHomeEnd() {\r\n        viewModelScope.launch {\r\n            val response = repository.getHomeend()\r\n            getHomeEndListResponse.value = response\r\n        }\r\n    }\r\n    fun getLogin() {\r\n        viewModelScope.launch {\r\n            val response = repository.getLogin()\r\n            loginResponse.value = response\r\n        }\r\n    }\r\n    fun getCategory(cntr_category:Int?) {\r\n        viewModelScope.launch {\r\n            val response = repository.getCategory(cntr_category)\r\n            getCategoryResponse.value = response\r\n        }\r\n    }\r\n\r\n    // 소통\r\n    fun getCommunication(cntr_sn:Int?) {\r\n        viewModelScope.launch {\r\n            val response = repository.getCommunication(cntr_sn)\r\n            getCommunicationResponse.value = response\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt b/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt
--- a/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ b/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt	(date 1673335184482)
@@ -19,6 +19,7 @@
     val noticeListResponse : MutableLiveData<Response<List<NoticeData>>> = MutableLiveData()
     val getHomeEndListResponse : MutableLiveData<Response<List<PostData>>> = MutableLiveData()
     val loginResponse : MutableLiveData<Response<UserData>> = MutableLiveData()
+    val joinResponse : MutableLiveData<Response<UserData>> = MutableLiveData()
     val getCategoryResponse : MutableLiveData<Response<List<PostData>>> = MutableLiveData()
     val getCommunicationResponse : MutableLiveData<Response<List<ReviewData>>> = MutableLiveData()
 
@@ -46,12 +47,26 @@
             getHomeEndListResponse.value = response
         }
     }
-    fun getLogin() {
+    fun getLogin(mbr_id: String?, mbr_password: String?) {
         viewModelScope.launch {
-            val response = repository.getLogin()
+            val response = repository.getLogin(mbr_id, mbr_password)
             loginResponse.value = response
         }
     }
+    fun join(
+        mbr_nm: String?,
+        mbr_id: String?,
+        mbr_password: String?,
+        mbr_ncnm: String?,
+        mbr_gen: Char,
+        mbr_tel: String?,
+        mbr_brthdy: String?,
+        mbr_email: String?) {
+        viewModelScope.launch {
+            val response = repository.join(mbr_nm, mbr_id, mbr_password, mbr_ncnm, mbr_gen, mbr_tel, mbr_brthdy, mbr_email)
+            joinResponse.value = response
+        }
+    }
     fun getCategory(cntr_category:Int?) {
         viewModelScope.launch {
             val response = repository.getCategory(cntr_category)
Index: app/src/main/java/com/example/water_app/repository/RestApi.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.repository\r\n\r\nimport com.example.water_app.model.*\r\nimport com.example.water_app.model.PostData\r\nimport com.example.water_app.model.UserData\r\nimport retrofit2.Response\r\nimport retrofit2.http.*\r\n\r\ninterface RestApi {\r\n    @GET(\"test2.php\")\r\n    suspend fun getUser(): Response<UserData>\r\n\r\n    @GET(\"home.php\")\r\n    suspend fun getDonationList(): Response<List<PostData>>\r\n\r\n    @GET(\"notice.php\")\r\n    suspend fun getNoticeList(): Response<List<NoticeData>>\r\n\r\n    @GET(\"homeend.php\")\r\n    suspend fun getHomeend(): Response<List<PostData>>\r\n\r\n    @GET(\"login.php\")\r\n    suspend fun getLogin(): Response<UserData>\r\n\r\n    @FormUrlEncoded\r\n    @POST(\"category.php\")\r\n    suspend fun getCategory(@Field(\"cntr_category\") cntr_category: Int?): Response<List<PostData>>\r\n\r\n    // 소통\r\n    @FormUrlEncoded\r\n    @POST(\"com.php\")\r\n    suspend fun getCommunication(@Field(\"cntr_sn\") cntr_sn: Int?): Response<List<ReviewData>>\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/repository/RestApi.kt b/app/src/main/java/com/example/water_app/repository/RestApi.kt
--- a/app/src/main/java/com/example/water_app/repository/RestApi.kt	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ b/app/src/main/java/com/example/water_app/repository/RestApi.kt	(date 1673335216133)
@@ -19,8 +19,25 @@
     @GET("homeend.php")
     suspend fun getHomeend(): Response<List<PostData>>
 
-    @GET("login.php")
-    suspend fun getLogin(): Response<UserData>
+    @FormUrlEncoded
+    @POST("login.php")
+    suspend fun getLogin(
+        @Field("mbr_id") mbr_id: String?,
+        @Field("mbr_password") mbr_password: String?
+    ): Response<UserData>
+
+    @FormUrlEncoded
+    @POST("join.php")
+    suspend fun join(
+        @Field("mbr_id") mbr_nm: String?,
+        @Field("mbr_password") mbr_id: String?,
+        @Field("mbr_password") mbr_password: String?,
+        @Field("mbr_password") mbr_ncnm: String?,
+        @Field("mbr_password") mbr_gen: Char,
+        @Field("mbr_password") mbr_tel: String?,
+        @Field("mbr_password") mbr_brthdy: String?,
+        @Field("mbr_password") mbr_email: String?
+    ): Response<UserData>
 
     @FormUrlEncoded
     @POST("category.php")
Index: app/src/main/java/com/example/water_app/repository/Repository.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.repository\r\n\r\nimport com.example.water_app.model.NoticeData\r\nimport com.example.water_app.model.PostData\r\nimport com.example.water_app.model.ReviewData\r\nimport com.example.water_app.model.UserData\r\nimport retrofit2.Response\r\n\r\nclass Repository {\r\n    // ViewModel에서 사용할 데이터 통신\r\n\r\n    suspend fun getUser() : Response<UserData> {\r\n        return Instance.api.getUser()\r\n    }\r\n\r\n    suspend fun getDonationList() : Response<List<PostData>> {\r\n        return Instance.api.getDonationList()\r\n    }\r\n\r\n    suspend fun getNoticeList() : Response<List<NoticeData>> {\r\n        return Instance.api.getNoticeList()\r\n    }\r\n\r\n    suspend fun getHomeend() : Response<List<PostData>> {\r\n        return Instance.api.getHomeend()\r\n    }\r\n    suspend fun getLogin() : Response<UserData> {\r\n        return Instance.api.getLogin()\r\n    }\r\n    suspend fun getCategory(cntr_category:Int?) : Response<List<PostData>> {\r\n        return Instance.api.getCategory(cntr_category)\r\n    }\r\n\r\n    // 소통\r\n    suspend fun getCommunication(cntr_sn:Int?) : Response<List<ReviewData>> {\r\n        return Instance.api.getCommunication(cntr_sn)\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/repository/Repository.kt b/app/src/main/java/com/example/water_app/repository/Repository.kt
--- a/app/src/main/java/com/example/water_app/repository/Repository.kt	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ b/app/src/main/java/com/example/water_app/repository/Repository.kt	(date 1673335203430)
@@ -24,9 +24,23 @@
     suspend fun getHomeend() : Response<List<PostData>> {
         return Instance.api.getHomeend()
     }
-    suspend fun getLogin() : Response<UserData> {
-        return Instance.api.getLogin()
+
+    suspend fun getLogin(mbr_id: String?, mbr_password: String?) : Response<UserData> {
+        return Instance.api.getLogin(mbr_id, mbr_password)
     }
+
+    suspend fun join(
+        mbr_nm: String?,
+        mbr_id: String?,
+        mbr_password: String?,
+        mbr_ncnm: String?,
+        mbr_gen: Char,
+        mbr_tel: String?,
+        mbr_brthdy: String?,
+        mbr_email: String?) : Response<UserData> {
+        return Instance.api.join(mbr_nm, mbr_id, mbr_password, mbr_ncnm, mbr_gen, mbr_tel, mbr_brthdy, mbr_email)
+    }
+
     suspend fun getCategory(cntr_category:Int?) : Response<List<PostData>> {
         return Instance.api.getCategory(cntr_category)
     }
Index: app/src/main/java/com/example/water_app/user/JoinActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.user\r\n\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport android.os.Bundle\r\nimport com.example.water_app.R\r\nimport com.example.water_app.databinding.ActivityJoinBinding\r\n\r\nclass JoinActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding: ActivityJoinBinding\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_join)\r\n\r\n        binding = ActivityJoinBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n        binding.btnBack.setOnClickListener {\r\n            super.onBackPressed()\r\n        }\r\n\r\n        binding.btnJoin!!.setOnClickListener {\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/user/JoinActivity.kt b/app/src/main/java/com/example/water_app/user/JoinActivity.kt
--- a/app/src/main/java/com/example/water_app/user/JoinActivity.kt	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ b/app/src/main/java/com/example/water_app/user/JoinActivity.kt	(date 1672987293912)
@@ -2,12 +2,23 @@
 
 import androidx.appcompat.app.AppCompatActivity
 import android.os.Bundle
+import android.util.Log
+import android.widget.Toast
 import com.example.water_app.R
 import com.example.water_app.databinding.ActivityJoinBinding
+import org.json.JSONException
+import org.json.JSONObject
+import retrofit2.Call
+import retrofit2.Callback
+import retrofit2.Response
+import retrofit2.Retrofit
+import retrofit2.converter.scalars.ScalarsConverterFactory
 
 class JoinActivity : AppCompatActivity() {
 
+    val TAG = "JoinActivity"
     private lateinit var binding: ActivityJoinBinding
+    private var preferenceHelper: PreferenceHelper? = null
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
@@ -21,6 +32,78 @@
         }
 
         binding.btnJoin!!.setOnClickListener {
+            registerMe()
+        }
+
+    }
+
+    private fun registerMe() {
+        val mbr_id = binding!!.edtId.text.toString()
+        val mbr_password = binding!!.edtPass.text.toString()
+        val mbr_nm = binding!!.edtName.text.toString()
+        val mbr_ncnm = binding!!.edtNick.text.toString()
+        val mbr_gen = 'Y'
+        val mbr_tel = binding!!.edtTel.text.toString()
+        val mbr_birth = binding!!.edtBirth.text.toString()
+        val mbr_email = binding!!.edtEmail.text.toString()
+
+        val retrofit = Retrofit.Builder()
+            .baseUrl(UserInterface.USER_URL)
+            .addConverterFactory(ScalarsConverterFactory.create())
+            .build()
+        val api = retrofit.create(UserInterface::class.java)
+        val call = api.getUserRegist(
+            mbr_id, mbr_password, mbr_nm, mbr_ncnm, mbr_gen, mbr_tel, mbr_birth, mbr_email)
+        call!!.enqueue(object : Callback<String?> {
+            override fun onResponse(call: Call<String?>, response: Response<String?>) {
+                if (response.isSuccessful && response.body() != null) {
+                    Log.e("onSuccess", response.body()!!)
+                    val jsonResponse = response.body()
+                    try {
+                        parseRegData(jsonResponse)
+                    } catch (e: JSONException) {
+                        e.printStackTrace()
+                    }
+                }
+            }
+
+            override fun onFailure(call: Call<String?>, t: Throwable) {
+                Log.e(TAG, "에러 = " + t.message)
+            }
+        })
+    }
+
+    @Throws(JSONException::class)
+    private fun parseRegData(response: String?) {
+        val jsonObject = JSONObject(response)
+        if (jsonObject.optString("status") == "true") {
+            saveInfo(response)
+            Toast.makeText(this@JoinActivity, "회원가입 성공", Toast.LENGTH_SHORT).show()
+        } else {
+            Toast.makeText(this@JoinActivity, jsonObject.getString("message"), Toast.LENGTH_SHORT)
+                .show()
+        }
+    }
+
+    private fun saveInfo(response: String?) {
+        preferenceHelper!!.putIsLogin(true)
+        try {
+            val jsonObject = JSONObject(response)
+            if (jsonObject.getString("status") == "true") {
+                val dataArray = jsonObject.getJSONArray("data")
+                for (i in 0 until dataArray.length()) {
+                    val dataobj = dataArray.getJSONObject(i)
+                    preferenceHelper!!.putId(dataobj.getString("mbr_id"))
+                    preferenceHelper!!.putPass(dataobj.getString("mbr_pass"))
+                    preferenceHelper!!.putPass(dataobj.getString("mbr_nm"))
+                    preferenceHelper!!.putPass(dataobj.getString("mbr_ncnm"))
+                    preferenceHelper!!.putPass(dataobj.getString("mbr_tel"))
+                    preferenceHelper!!.putPass(dataobj.getString("mbr_brthdy"))
+                    preferenceHelper!!.putPass(dataobj.getString("mbr_email"))
+                }
+            }
+        } catch (e: JSONException) {
+            e.printStackTrace()
         }
     }
 }
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03__4_05__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03__4_05__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03__4_05__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03__4_05__Changes_.xml	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ /dev/null	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
@@ -1,4 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2023-01-03_오후_4_05_[Changes]" date="1672729567364" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_4_05_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2023-01-03 오후 4:05 [Changes]" />
-</changelist>
\ No newline at end of file
Index: app/src/main/java/com/example/water_app/user/MySharedPreferences.kt
===================================================================
diff --git a/app/src/main/java/com/example/water_app/user/MySharedPreferences.kt b/app/src/main/java/com/example/water_app/user/MySharedPreferences.kt
deleted file mode 100644
--- a/app/src/main/java/com/example/water_app/user/MySharedPreferences.kt	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ /dev/null	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
@@ -1,51 +0,0 @@
-package com.example.water_app.user
-
-import android.content.Context
-import android.content.SharedPreferences
-
-object MySharedPreferences {
-    private val MY_ACCOUNT : String = "account"
-
-    fun setUserId(context: Context, input: String) {
-        val prefs : SharedPreferences = context.getSharedPreferences(MY_ACCOUNT, Context.MODE_PRIVATE)
-        val editor : SharedPreferences.Editor = prefs.edit()
-        editor.putString("mbr_id", input)
-        editor.commit()
-    }
-
-    fun getUserId(context: Context): String {
-        val prefs : SharedPreferences = context.getSharedPreferences(MY_ACCOUNT, Context.MODE_PRIVATE)
-        return prefs.getString("mbr_id", "").toString()
-    }
-
-    fun setUserPass(context: Context, input: String) {
-        val prefs : SharedPreferences = context.getSharedPreferences(MY_ACCOUNT, Context.MODE_PRIVATE)
-        val editor : SharedPreferences.Editor = prefs.edit()
-        editor.putString("mbr_password", input)
-        editor.commit()
-    }
-
-    fun getUserPass(context: Context): String {
-        val prefs : SharedPreferences = context.getSharedPreferences(MY_ACCOUNT, Context.MODE_PRIVATE)
-        return prefs.getString("mbr_password", "").toString()
-    }
-
-    fun setUserSn(context: Context, input: String) {
-        val prefs : SharedPreferences = context.getSharedPreferences(MY_ACCOUNT, Context.MODE_PRIVATE)
-        val editor : SharedPreferences.Editor = prefs.edit()
-        editor.putString("mbr_sn", input)
-        editor.commit()
-    }
-
-    fun getUserSn(context: Context): String {
-        val prefs : SharedPreferences = context.getSharedPreferences(MY_ACCOUNT, Context.MODE_PRIVATE)
-        return prefs.getString("mbr_sn", "").toString()
-    }
-
-    fun clearUser(context: Context) {
-        val prefs : SharedPreferences = context.getSharedPreferences(MY_ACCOUNT, Context.MODE_PRIVATE)
-        val editor : SharedPreferences.Editor = prefs.edit()
-        editor.clear()
-        editor.commit()
-    }
-}
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_2_28_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_2_28_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_2_28_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_2_28_[Changes]/shelved.patch	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ /dev/null	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
@@ -1,378 +0,0 @@
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26_오후_8_17_[Changes]/shelved.patch
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26_오후_8_17_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26_오후_8_17_[Changes]/shelved.patch
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26_오후_8_17_[Changes]/shelved.patch	(revision c6691b098f5cee1496036469af42cd6dccacb1cf)
-+++ /dev/null	(revision c6691b098f5cee1496036469af42cd6dccacb1cf)
-@@ -1,354 +0,0 @@
--Index: app/src/main/java/com/example/water_app/main/MainActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.water_app.main\r\n\r\nimport android.os.Bundle\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.water_app.R\r\nimport com.google.android.material.bottomnavigation.BottomNavigationView\r\n\r\n\r\n\r\nclass MainActivity : AppCompatActivity() {\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_main)\r\n\r\n\r\n    // BottomNavigationView 객체 생성\r\n        var bnv_main = findViewById(R.id.bnv_main) as BottomNavigationView\r\n\r\n        bnv_main.run { setOnNavigationItemSelectedListener {\r\n            when(it.itemId) {\r\n                // 프래그먼트 이동\r\n                R.id.first -> {\r\n                    val homeFragment = HomeFragment()\r\n                    supportFragmentManager.beginTransaction().replace(R.id.fl_container, homeFragment).commit()\r\n                }\r\n                R.id.second -> {\r\n                    val boardFragment = DonationFragment()\r\n                    supportFragmentManager.beginTransaction().replace(R.id.fl_container, boardFragment).commit()\r\n                }\r\n                R.id.third -> {\r\n                    val settingFragment = MapFragment()\r\n                    supportFragmentManager.beginTransaction().replace(R.id.fl_container, settingFragment).commit()\r\n                }\r\n                R.id.fourth -> {\r\n                    val settingFragment = StoreFragment()\r\n                    supportFragmentManager.beginTransaction().replace(R.id.fl_container, settingFragment).commit()\r\n                }\r\n                R.id.fifth -> {\r\n                    val settingFragment = MyPageFragment()\r\n                    supportFragmentManager.beginTransaction().replace(R.id.fl_container, settingFragment).commit()\r\n                }\r\n            }\r\n            true\r\n        }\r\n            selectedItemId = R.id.first\r\n        }\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/water_app/main/MainActivity.kt b/app/src/main/java/com/example/water_app/main/MainActivity.kt
----- a/app/src/main/java/com/example/water_app/main/MainActivity.kt	(revision bb5e0a2f2c663ef646606c17124574a0d28fd8dc)
--+++ b/app/src/main/java/com/example/water_app/main/MainActivity.kt	(date 1672053155871)
--@@ -1,13 +1,22 @@
-- package com.example.water_app.main
-- 
--+import android.content.pm.PackageInfo
--+import android.content.pm.PackageManager
--+import android.content.pm.Signature
--+import android.os.Build
-- import android.os.Bundle
--+import android.util.Base64
--+import android.util.Log
--+import androidx.annotation.RequiresApi
-- import androidx.appcompat.app.AppCompatActivity
-- import com.example.water_app.R
-- import com.google.android.material.bottomnavigation.BottomNavigationView
---
--+import java.security.MessageDigest
--+import java.security.NoSuchAlgorithmException
-- 
-- 
-- class MainActivity : AppCompatActivity() {
--+
--     override fun onCreate(savedInstanceState: Bundle?) {
--         super.onCreate(savedInstanceState)
--         setContentView(R.layout.activity_main)
--@@ -44,5 +53,19 @@
--         }
--             selectedItemId = R.id.first
--         }
--+
--+        if (Build.VERSION.SDK_INT >= Build.VERSION_CODES.P) {
--+            val packageInfo =
--+                packageManager.getPackageInfo(packageName, PackageManager.GET_SIGNING_CERTIFICATES)
--+            for (signature in packageInfo.signingInfo.apkContentsSigners) {
--+                try {
--+                    val md = MessageDigest.getInstance("SHA")
--+                    md.update(signature.toByteArray())
--+                    Log.d("getKeyHash", "key hash: ${Base64.encodeToString(md.digest(), Base64.NO_WRAP)}")
--+                } catch (e: NoSuchAlgorithmException) {
--+                    Log.w("getKeyHash", "Unable to get MessageDigest. signature=$signature", e)
--+                }
--+            }
--+        }
--     }
-- }
--\ No newline at end of file
--Index: app/src/main/java/com/example/water_app/main/MapFragment.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.water_app.main\r\n\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport com.example.water_app.R\r\n\r\n// TODO: Rename parameter arguments, choose names that match\r\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\n/**\r\n * A simple [Fragment] subclass.\r\n * Use the [MapFragment.newInstance] factory method to\r\n * create an instance of this fragment.\r\n */\r\nclass MapFragment : Fragment() {\r\n    // TODO: Rename and change types of parameters\r\n    private var param1: String? = null\r\n    private var param2: String? = null\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        arguments?.let {\r\n            param1 = it.getString(ARG_PARAM1)\r\n            param2 = it.getString(ARG_PARAM2)\r\n        }\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n        // Inflate the layout for this fragment\r\n        return inflater.inflate(R.layout.fragment_map, container, false)\r\n    }\r\n\r\n    companion object {\r\n        /**\r\n         * Use this factory method to create a new instance of\r\n         * this fragment using the provided parameters.\r\n         *\r\n         * @param param1 Parameter 1.\r\n         * @param param2 Parameter 2.\r\n         * @return A new instance of fragment MapFragment.\r\n         */\r\n        // TODO: Rename and change types and number of parameters\r\n        @JvmStatic\r\n        fun newInstance(param1: String, param2: String) =\r\n            MapFragment().apply {\r\n                arguments = Bundle().apply {\r\n                    putString(ARG_PARAM1, param1)\r\n                    putString(ARG_PARAM2, param2)\r\n                }\r\n            }\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/water_app/main/MapFragment.kt b/app/src/main/java/com/example/water_app/main/MapFragment.kt
----- a/app/src/main/java/com/example/water_app/main/MapFragment.kt	(revision bb5e0a2f2c663ef646606c17124574a0d28fd8dc)
--+++ b/app/src/main/java/com/example/water_app/main/MapFragment.kt	(date 1672052417599)
--@@ -1,60 +1,40 @@
-- package com.example.water_app.main
-- 
--+import android.R
--+import android.content.ContentValues.TAG
-- import android.os.Bundle
---import androidx.fragment.app.Fragment
--+import android.text.Layout
-- import android.view.LayoutInflater
-- import android.view.View
-- import android.view.ViewGroup
---import com.example.water_app.R
--+import androidx.fragment.app.Fragment
--+import com.example.water_app.databinding.FragmentMapBinding
--+import com.kakao.util.maps.helper.Utility
--+import net.daum.mf.map.api.MapPoint
--+import net.daum.mf.map.api.MapView
-- 
---// TODO: Rename parameter arguments, choose names that match
---// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
---private const val ARG_PARAM1 = "param1"
---private const val ARG_PARAM2 = "param2"
-- 
---/**
--- * A simple [Fragment] subclass.
--- * Use the [MapFragment.newInstance] factory method to
--- * create an instance of this fragment.
--- */
-- class MapFragment : Fragment() {
---    // TODO: Rename and change types of parameters
---    private var param1: String? = null
---    private var param2: String? = null
--+
--+    private lateinit var binding: FragmentMapBinding
-- 
--     override fun onCreate(savedInstanceState: Bundle?) {
--         super.onCreate(savedInstanceState)
---        arguments?.let {
---            param1 = it.getString(ARG_PARAM1)
---            param2 = it.getString(ARG_PARAM2)
---        }
--     }
-- 
--     override fun onCreateView(
--         inflater: LayoutInflater, container: ViewGroup?,
--         savedInstanceState: Bundle?
--     ): View? {
---        // Inflate the layout for this fragment
---        return inflater.inflate(R.layout.fragment_map, container, false)
--+
--+        binding = FragmentMapBinding.inflate(inflater, container, false)
--+
--+        val mapView = MapView(requireActivity())
--+        val mapViewContainer = binding.mapLayout as ViewGroup
--+        mapViewContainer.addView(mapView)
--+
--+        return binding.root
--     }
-- 
---    companion object {
---        /**
---         * Use this factory method to create a new instance of
---         * this fragment using the provided parameters.
---         *
---         * @param param1 Parameter 1.
---         * @param param2 Parameter 2.
---         * @return A new instance of fragment MapFragment.
---         */
---        // TODO: Rename and change types and number of parameters
---        @JvmStatic
---        fun newInstance(param1: String, param2: String) =
---            MapFragment().apply {
---                arguments = Bundle().apply {
---                    putString(ARG_PARAM1, param1)
---                    putString(ARG_PARAM2, param2)
---                }
---            }
---    }
--+
-- }
--\ No newline at end of file
--Index: app/build.gradle
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>plugins {\r\n    id 'com.android.application'\r\n    id 'org.jetbrains.kotlin.android'\r\n    id 'kotlin-kapt'\r\n}\r\n\r\nandroid {\r\n    namespace 'com.example.water_app'\r\n    compileSdk 32\r\n\r\n    defaultConfig {\r\n        applicationId \"com.example.water_app\"\r\n        minSdk 21\r\n        targetSdk 32\r\n        versionCode 1\r\n        versionName \"1.0\"\r\n\r\n        testInstrumentationRunner \"androidx.test.runner.AndroidJUnitRunner\"\r\n    }\r\n\r\n    buildTypes {\r\n        release {\r\n            minifyEnabled false\r\n            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'\r\n        }\r\n    }\r\n    compileOptions {\r\n        sourceCompatibility JavaVersion.VERSION_1_8\r\n        targetCompatibility JavaVersion.VERSION_1_8\r\n    }\r\n    kotlinOptions {\r\n        jvmTarget = '1.8'\r\n    }\r\n    buildFeatures {\r\n        viewBinding true\r\n    }\r\n    viewBinding{\r\n        enabled = true\r\n    }\r\n}\r\n\r\ndependencies {\r\n\r\n    implementation 'androidx.core:core-ktx:1.7.0'\r\n    implementation 'androidx.appcompat:appcompat:1.5.1'\r\n    implementation 'com.google.android.material:material:1.6.1'\r\n    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'\r\n    implementation 'androidx.annotation:annotation:1.3.0'\r\n    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.4.1'\r\n    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.4.1'\r\n    implementation 'androidx.room:room-runtime:2.4.3'\r\n    kapt 'androidx.room:room-common:2.4.3'\r\n    testImplementation 'junit:junit:4.13.2'\r\n    androidTestImplementation 'androidx.test.ext:junit:1.1.3'\r\n    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'\r\n\r\n    implementation 'com.google.android.material:material:1.3.0'\r\n    implementation(\"androidx.fragment:fragment-ktx:1.3.6\")\r\n\r\n    //Glide\r\n    implementation 'com.github.bumptech.glide:glide:4.11.0'\r\n    annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/build.gradle b/app/build.gradle
----- a/app/build.gradle	(revision bb5e0a2f2c663ef646606c17124574a0d28fd8dc)
--+++ b/app/build.gradle	(date 1672052417605)
--@@ -8,6 +8,10 @@
--     namespace 'com.example.water_app'
--     compileSdk 32
-- 
--+    buildFeatures {
--+        viewBinding true
--+    }
--+
--     defaultConfig {
--         applicationId "com.example.water_app"
--         minSdk 21
--@@ -16,6 +20,10 @@
--         versionName "1.0"
-- 
--         testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
--+
--+        ndk {
--+            abiFilters 'arm64-v8a', 'armeabi', 'armeabi-v7a'
--+        }
--     }
-- 
--     buildTypes {
--@@ -57,7 +65,11 @@
--     implementation 'com.google.android.material:material:1.3.0'
--     implementation("androidx.fragment:fragment-ktx:1.3.6")
-- 
---    //Glide
--+    // Glide
--     implementation 'com.github.bumptech.glide:glide:4.11.0'
--     annotationProcessor 'com.github.bumptech.glide:compiler:4.11.0'
--+
--+    // 카카오 맵
--+    implementation fileTree(include: ['*.jar'], dir: 'libs')
--+    implementation files('libs/libDaumMapAndroid.jar')
-- }
--\ No newline at end of file
--Index: app/src/main/AndroidManifest.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<manifest xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\">\r\n\r\n    <application\r\n        android:allowBackup=\"true\"\r\n        android:dataExtractionRules=\"@xml/data_extraction_rules\"\r\n        android:fullBackupContent=\"@xml/backup_rules\"\r\n        android:icon=\"@mipmap/ic_launcher\"\r\n        android:label=\"@string/app_name\"\r\n        android:roundIcon=\"@mipmap/ic_launcher_round\"\r\n        android:supportsRtl=\"true\"\r\n        android:theme=\"@style/Theme.Water_app\"\r\n        tools:targetApi=\"31\"\r\n        android:usesCleartextTraffic=\"true\">\r\n        <activity\r\n            android:name=\".SplashActivity\"\r\n            android:exported=\"true\">\r\n            <intent-filter>\r\n                <action android:name=\"android.intent.action.MAIN\" />\r\n                <category android:name=\"android.intent.category.LAUNCHER\" />\r\n            </intent-filter>\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".home.SubmitActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".home.DonationListActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".communication.CommunicationActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".mypage.MyPageActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".home.DonationTimeActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".home.DonationPointActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".home.DonationItemActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".home.DonationActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".JoinActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".LoginActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n        <activity\r\n            android:name=\".main.MainActivity\"\r\n            android:exported=\"false\">\r\n            <meta-data\r\n                android:name=\"android.app.lib_name\"\r\n                android:value=\"\" />\r\n        </activity>\r\n    </application>\r\n    <uses-permission android:name=\"android.permission.INTERNET\"></uses-permission>\r\n</manifest>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/AndroidManifest.xml b/app/src/main/AndroidManifest.xml
----- a/app/src/main/AndroidManifest.xml	(revision bb5e0a2f2c663ef646606c17124574a0d28fd8dc)
--+++ b/app/src/main/AndroidManifest.xml	(date 1672051809995)
--@@ -2,6 +2,10 @@
-- <manifest xmlns:android="http://schemas.android.com/apk/res/android"
--     xmlns:tools="http://schemas.android.com/tools">
-- 
--+    <uses-permission android:name="android.permission.INTERNET" />
--+    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />
--+    <uses-permission android:name="android.permission.ACCESS_COARSE_LOCATION" />
--+
--     <application
--         android:allowBackup="true"
--         android:dataExtractionRules="@xml/data_extraction_rules"
--@@ -12,7 +16,8 @@
--         android:supportsRtl="true"
--         android:theme="@style/Theme.Water_app"
--         tools:targetApi="31"
---        android:usesCleartextTraffic="true">
--+        android:usesCleartextTraffic="true"
--+        android:networkSecurityConfig="@xml/network_security_config">
--         <activity
--             android:name=".SplashActivity"
--             android:exported="true">
--@@ -101,6 +106,7 @@
--                 android:name="android.app.lib_name"
--                 android:value="" />
--         </activity>
--+
--+        <meta-data android:name="com.kakao.sdk.AppKey" android:value="bd5be5c79f704a2ca43de0e810f10a03" />
--     </application>
---    <uses-permission android:name="android.permission.INTERNET"></uses-permission>
-- </manifest>
--\ No newline at end of file
--Index: app/src/main/res/layout/fragment_map.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<FrameLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    tools:context=\".main.MapFragment\"\r\n    android:background=\"@color/white\">\r\n\r\n    <!-- TODO: Update blank fragment layout -->\r\n    <TextView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:text=\"@string/hello_blank_fragment\" />\r\n\r\n</FrameLayout>
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/res/layout/fragment_map.xml b/app/src/main/res/layout/fragment_map.xml
----- a/app/src/main/res/layout/fragment_map.xml	(revision bb5e0a2f2c663ef646606c17124574a0d28fd8dc)
--+++ b/app/src/main/res/layout/fragment_map.xml	(date 1672051279418)
--@@ -6,10 +6,9 @@
--     tools:context=".main.MapFragment"
--     android:background="@color/white">
-- 
---    <!-- TODO: Update blank fragment layout -->
---    <TextView
--+    <androidx.constraintlayout.widget.ConstraintLayout
--+        android:id="@+id/mapLayout"
--         android:layout_width="match_parent"
---        android:layout_height="match_parent"
---        android:text="@string/hello_blank_fragment" />
---
--+        android:layout_height="match_parent">
--+    </androidx.constraintlayout.widget.ConstraintLayout>
-- </FrameLayout>
--\ No newline at end of file
--Index: app/src/main/java/com/example/water_app/LoginActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.water_app\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.widget.Button\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.water_app.home.DonationActivity\r\nimport com.example.water_app.main.MainActivity\r\n\r\nclass LoginActivity : AppCompatActivity() {\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_login)\r\n\r\n        val btnLogin = findViewById<Button>(R.id.btnLogin)\r\n\r\n        btnLogin.setOnClickListener{\r\n            val intent = Intent(this, MainActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/water_app/LoginActivity.kt b/app/src/main/java/com/example/water_app/LoginActivity.kt
----- a/app/src/main/java/com/example/water_app/LoginActivity.kt	(revision bb5e0a2f2c663ef646606c17124574a0d28fd8dc)
--+++ b/app/src/main/java/com/example/water_app/LoginActivity.kt	(date 1672045324966)
--@@ -2,11 +2,17 @@
-- 
-- import android.annotation.SuppressLint
-- import android.content.Intent
--+import android.content.pm.PackageManager
--+import android.os.Build
-- import android.os.Bundle
--+import android.util.Base64
--+import android.util.Log
-- import android.widget.Button
--+import androidx.annotation.RequiresApi
-- import androidx.appcompat.app.AppCompatActivity
-- import com.example.water_app.home.DonationActivity
-- import com.example.water_app.main.MainActivity
--+import java.security.MessageDigest
-- 
-- class LoginActivity : AppCompatActivity() {
-- 
--Index: app/src/main/res/xml/network_security_config.xml
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/res/xml/network_security_config.xml b/app/src/main/res/xml/network_security_config.xml
--new file mode 100644
----- /dev/null	(date 1672053400440)
--+++ b/app/src/main/res/xml/network_security_config.xml	(date 1672053400440)
--@@ -0,0 +1,6 @@
--+<?xml version="1.0" encoding="utf-8"?>
--+<network-security-config>
--+    <domain-config cleartextTrafficPermitted="true">
--+        <domain includeSubdomains="true">maps.daum-img.net</domain>
--+    </domain-config>
--+</network-security-config>
--\ No newline at end of file
--Index: app/src/main/java/com/example/water_app/main/MyPageFragment.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.water_app.main\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.LinearLayout\r\nimport com.example.water_app.R\r\nimport com.example.water_app.mypage.MyPageActivity\r\n\r\n// TODO: Rename parameter arguments, choose names that match\r\n// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER\r\nprivate const val ARG_PARAM1 = \"param1\"\r\nprivate const val ARG_PARAM2 = \"param2\"\r\n\r\nclass MyPageFragment : Fragment() {\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        val view = inflater.inflate(R.layout.fragment_my_page, null)\r\n        val linMyPage = view.findViewById<LinearLayout>(R.id.linMyPage)\r\n\r\n        linMyPage.setOnClickListener{\r\n            activity?.let{\r\n                val intent = Intent(context, MyPageActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n\r\n        return view\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/water_app/main/MyPageFragment.kt b/app/src/main/java/com/example/water_app/main/MyPageFragment.kt
----- a/app/src/main/java/com/example/water_app/main/MyPageFragment.kt	(revision bb5e0a2f2c663ef646606c17124574a0d28fd8dc)
--+++ b/app/src/main/java/com/example/water_app/main/MyPageFragment.kt	(date 1672049965496)
--@@ -10,11 +10,6 @@
-- import com.example.water_app.R
-- import com.example.water_app.mypage.MyPageActivity
-- 
---// TODO: Rename parameter arguments, choose names that match
---// the fragment initialization parameters, e.g. ARG_ITEM_NUMBER
---private const val ARG_PARAM1 = "param1"
---private const val ARG_PARAM2 = "param2"
---
-- class MyPageFragment : Fragment() {
-- 
--     override fun onCreate(savedInstanceState: Bundle?) {
--Index: app/src/main/java/com/example/water_app/SplashActivity.kt
--IDEA additional info:
--Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
--<+>package com.example.water_app\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport android.widget.Button\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.water_app.main.MainActivity\r\n\r\nclass SplashActivity : AppCompatActivity() {\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_splash)\r\n\r\n        val handler = Handler()\r\n        handler.postDelayed({\r\n            val intent = Intent(applicationContext, LoginActivity::class.java)\r\n            startActivity(intent)\r\n            finish()\r\n        }, 1500)\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        finish()\r\n    }\r\n}
--Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
--<+>UTF-8
--===================================================================
--diff --git a/app/src/main/java/com/example/water_app/SplashActivity.kt b/app/src/main/java/com/example/water_app/SplashActivity.kt
----- a/app/src/main/java/com/example/water_app/SplashActivity.kt	(revision bb5e0a2f2c663ef646606c17124574a0d28fd8dc)
--+++ b/app/src/main/java/com/example/water_app/SplashActivity.kt	(date 1672045276063)
--@@ -1,11 +1,17 @@
-- package com.example.water_app
-- 
-- import android.content.Intent
--+import android.content.pm.PackageManager
--+import android.os.Build
-- import android.os.Bundle
-- import android.os.Handler
--+import android.util.Base64
--+import android.util.Log
-- import android.widget.Button
--+import androidx.annotation.RequiresApi
-- import androidx.appcompat.app.AppCompatActivity
-- import com.example.water_app.main.MainActivity
--+import java.security.MessageDigest
-- 
-- class SplashActivity : AppCompatActivity() {
-- 
-Index: .idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26__8_17__Changes_.xml
-===================================================================
-diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26__8_17__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26__8_17__Changes_.xml
-deleted file mode 100644
---- a/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26__8_17__Changes_.xml	(revision c6691b098f5cee1496036469af42cd6dccacb1cf)
-+++ /dev/null	(revision c6691b098f5cee1496036469af42cd6dccacb1cf)
-@@ -1,9 +0,0 @@
--<changelist name="Uncommitted_changes_before_Update_at_2022-12-26_오후_8_17_[Changes]" date="1672053542851" recycled="true" deleted="true">
--  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26_오후_8_17_[Changes]/shelved.patch" />
--  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2022-12-26 오후 8:17 [Changes]" />
--  <binary>
--    <option name="BEFORE_PATH" />
--    <option name="AFTER_PATH" value="app/libs/libDaumMapAndroid.jar" />
--    <option name="SHELVED_PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26_오후_8_17_[Changes]/libDaumMapAndroid.jar" />
--  </binary>
--</changelist>
-\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03__2_28__Changes_.xml
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03__2_28__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03__2_28__Changes_.xml
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03__2_28__Changes_.xml	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ /dev/null	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
@@ -1,9 +0,0 @@
-<changelist name="Uncommitted_changes_before_Update_at_2023-01-03_오후_2_28_[Changes]" date="1672723719511" recycled="true" deleted="true">
-  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_2_28_[Changes]/shelved.patch" />
-  <option name="DESCRIPTION" value="Uncommitted changes before Update at 2023-01-03 오후 2:28 [Changes]" />
-  <binary>
-    <option name="BEFORE_PATH" value=".idea/shelf/Uncommitted_changes_before_Update_at_2022-12-26_오후_8_17_[Changes]/libDaumMapAndroid.jar" />
-    <option name="AFTER_PATH" />
-    <option name="SHELVED_PATH" />
-  </binary>
-</changelist>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_4_05_[Changes]/shelved.patch
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_4_05_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_4_05_[Changes]/shelved.patch
deleted file mode 100644
--- a/.idea/shelf/Uncommitted_changes_before_Update_at_2023-01-03_오후_4_05_[Changes]/shelved.patch	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ /dev/null	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
@@ -1,276 +0,0 @@
-Index: app/src/main/java/com/example/water_app/main/HomeFragment.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.water_app.main\r\n\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport androidx.recyclerview.widget.LinearLayoutManager\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport androidx.viewpager2.widget.ViewPager2\r\nimport com.example.water_app.R\r\nimport com.example.water_app.databinding.FragmentHomeBinding\r\nimport com.example.water_app.home.SubmitActivity\r\nimport com.example.water_app.recyclerview.HomeAdapter\r\nimport com.example.water_app.recyclerview.MyViewPagerAdapter\r\nimport com.example.water_app.recyclerview.ViewPagerAdapter\r\nimport com.example.water_app.vo.HomeData\r\n\r\nclass HomeFragment : Fragment() {\r\n\r\n    // 뷰바인딩\r\n    private lateinit var binding: FragmentHomeBinding\r\n\r\n    // MainActivity 가져오기\r\n    lateinit var mainActivity: MainActivity\r\n\r\n    //뷰페이저\r\n    private val sliderImageHandler: Handler = Handler()\r\n    private val sliderImageRunnable = Runnable { binding.ivBanner.currentItem = binding.ivBanner.currentItem + 1 }\r\n\r\n\r\n\r\n\r\n    private fun getAespaMembers(): ArrayList<Int> {\r\n        return arrayListOf<Int>(\r\n            R.drawable.banner1,\r\n            R.drawable.store2,\r\n            R.drawable.store3,\r\n            R.drawable.store4)\r\n    }\r\n\r\n    // context를 mainActivity에 담음\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n\r\n        mainActivity = context as MainActivity\r\n    }\r\n\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        // 뷰바인딩\r\n        binding = FragmentHomeBinding.inflate(inflater, container, false)\r\n\r\n        //뷰페이저\r\n//        binding.ivBanner.adapter = MyViewPagerAdapter(getAespaMembers()) // 어댑터 생성\r\n//        binding.ivBanner.orientation = ViewPager2.ORIENTATION_HORIZONTAL // 방향을 가로로\r\n\r\n        val imageList = arrayListOf<Int>().apply {\r\n            for (i in 0..2) {\r\n                add(R.drawable.banner1)\r\n            }\r\n        }\r\n\r\n        val pageMarginPx = resources.getDimensionPixelOffset(R.dimen.pageMargin)\r\n        val pagerWidth = resources.getDimensionPixelOffset(R.dimen.pageWidth)\r\n        val screenWidth = resources.displayMetrics.widthPixels\r\n        val offsetPx = screenWidth - pageMarginPx - pagerWidth\r\n\r\n        binding.ivBanner.apply {\r\n            adapter = ViewPagerAdapter(imageList, binding.ivBanner)\r\n            offscreenPageLimit = 1\r\n            getChildAt(0).overScrollMode = RecyclerView.OVER_SCROLL_NEVER\r\n            registerOnPageChangeCallback(object : ViewPager2.OnPageChangeCallback() {\r\n                override fun onPageSelected(position: Int) {\r\n                    super.onPageSelected(position)\r\n                    sliderImageHandler.removeCallbacks(sliderImageRunnable)\r\n                    sliderImageHandler.postDelayed(sliderImageRunnable, 3000)\r\n                }\r\n            })\r\n            setPageTransformer { page, position ->\r\n                page.translationX = position * -offsetPx\r\n            }\r\n        }\r\n\r\n\r\n\r\n        // MainActivity 담음\r\n        mainActivity = context as MainActivity\r\n\r\n        val homeList = arrayListOf(\r\n            HomeData(R.drawable.my_document, \"제목1\", \"100만원\", \"10%\"),\r\n            HomeData(R.drawable.my_document, \"제목2\", \"200만원\", \"20%\"),\r\n            HomeData(R.drawable.my_document, \"제목3\", \"300만원\", \"30%\"),\r\n            HomeData(R.drawable.my_document, \"제목4\", \"400만원\", \"40%\")\r\n        )\r\n\r\n\r\n        binding.rvDonation.layoutManager = LinearLayoutManager(requireContext(), LinearLayoutManager.HORIZONTAL, false)\r\n        binding.rvDonation.setHasFixedSize(true)\r\n        binding.rvDonation.adapter = HomeAdapter(requireContext(), homeList)\r\n\r\n        // OnClickListener\r\n        val adapter = HomeAdapter(requireContext(), homeList)\r\n\r\n        adapter.setItemClickListener(object : HomeAdapter.OnItemClickListener{\r\n            override fun onClick(v: View, position: Int) {\r\n                activity?.let{\r\n                    val intent = Intent(context, SubmitActivity::class.java)\r\n                    startActivity(intent)\r\n                }\r\n            }\r\n        })\r\n\r\n        binding.rvDonation.adapter = adapter\r\n\r\n        // 카테고리\r\n        binding.btnChild.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n        binding.btnOld.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n        binding.btnDisabled.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n        binding.btnAnimal.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n        binding.btnEtc.setOnClickListener{\r\n            mainActivity.openFragment()\r\n        }\r\n\r\n        return binding.root\r\n    }\r\n    //뷰페이저\r\n    override fun onResume() {\r\n        super.onResume()\r\n        sliderImageHandler.postDelayed(sliderImageRunnable, 1000)\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        sliderImageHandler.removeCallbacks(sliderImageRunnable)\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/water_app/main/HomeFragment.kt b/app/src/main/java/com/example/water_app/main/HomeFragment.kt
---- a/app/src/main/java/com/example/water_app/main/HomeFragment.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
-+++ b/app/src/main/java/com/example/water_app/main/HomeFragment.kt	(date 1672729348762)
-@@ -4,19 +4,27 @@
- import android.content.Intent
- import android.os.Bundle
- import android.os.Handler
-+import android.util.Log
- import androidx.fragment.app.Fragment
- import android.view.LayoutInflater
- import android.view.View
- import android.view.ViewGroup
-+import android.widget.Toast
-+import androidx.lifecycle.Observer
-+import androidx.lifecycle.ViewModelProvider
- import androidx.recyclerview.widget.LinearLayoutManager
- import androidx.recyclerview.widget.RecyclerView
- import androidx.viewpager2.widget.ViewPager2
- import com.example.water_app.R
- import com.example.water_app.databinding.FragmentHomeBinding
- import com.example.water_app.home.SubmitActivity
-+import com.example.water_app.recyclerview.HistoryAdapter
- import com.example.water_app.recyclerview.HomeAdapter
- import com.example.water_app.recyclerview.MyViewPagerAdapter
- import com.example.water_app.recyclerview.ViewPagerAdapter
-+import com.example.water_app.repository.Repository
-+import com.example.water_app.viewmodel.MainViewModel
-+import com.example.water_app.viewmodel.MainViewModelFactory
- import com.example.water_app.vo.HomeData
- 
- class HomeFragment : Fragment() {
-@@ -27,6 +35,9 @@
-     // MainActivity 가져오기
-     lateinit var mainActivity: MainActivity
- 
-+    //뷰 모델 가져오기
-+    private lateinit var viewModel : MainViewModel
-+
-     //뷰페이저
-     private val sliderImageHandler: Handler = Handler()
-     private val sliderImageRunnable = Runnable { binding.ivBanner.currentItem = binding.ivBanner.currentItem + 1 }
-@@ -93,31 +104,62 @@
-         // MainActivity 담음
-         mainActivity = context as MainActivity
- 
--        val homeList = arrayListOf(
--            HomeData(R.drawable.my_document, "제목1", "100만원", "10%"),
--            HomeData(R.drawable.my_document, "제목2", "200만원", "20%"),
--            HomeData(R.drawable.my_document, "제목3", "300만원", "30%"),
--            HomeData(R.drawable.my_document, "제목4", "400만원", "40%")
--        )
-+        //데이터담은
-+        //리사이클러뷰
-+
-+        val repository = Repository()
-+        val viewModelFactory = MainViewModelFactory(repository)
-+
-+        viewModel = ViewModelProvider(this,viewModelFactory).get(MainViewModel::class.java)
-+        viewModel.getHomeList()
-+        viewModel.homeResponse.observe(viewLifecycleOwner, Observer {
-+            // 통신 성공
-+            if(it.isSuccessful){
-+                val homeList = it.body()
-+                Log.d("-----------------","${homeList.toString()}")
-+                //리사이클러뷰
-+//                binding.rvDonation.layoutManager = LinearLayoutManager(requireContext(), LinearLayoutManager.VERTICAL, false)
-+//                binding.rvDonation.setHasFixedSize(true)  // 성능 개선
-+//                binding.rvDonation.adapter = HistoryAdapter(requireContext(), homeList)
-+
-+//                binding.rvDonation.layoutManager = LinearLayoutManager(requireContext(), LinearLayoutManager.HORIZONTAL, false)
-+//                binding.rvDonation.setHasFixedSize(true)
-+//                binding.rvDonation.adapter = HomeAdapter(requireContext(), homeList)
-+//
-+//                val adapter = HomeAdapter(requireContext(), homeList)
-+//
-+//                adapter.setItemClickListener(object : HomeAdapter.OnItemClickListener{
-+//                    override fun onClick(v: View, position: Int) {
-+//                        activity?.let{
-+//                            val intent = Intent(context, SubmitActivity::class.java)
-+//                            startActivity(intent)
-+//                        }
-+//                    }
-+//                })
-+//
-+//                binding.rvDonation.adapter = adapter
-+
-+            }
-+            // 통신 실패
-+            else{
-+
-+            }
-+        })
-+
-+
- 
- 
--        binding.rvDonation.layoutManager = LinearLayoutManager(requireContext(), LinearLayoutManager.HORIZONTAL, false)
--        binding.rvDonation.setHasFixedSize(true)
--        binding.rvDonation.adapter = HomeAdapter(requireContext(), homeList)
-+        //옛날 리사이클러뷰
-+//        val homeList = arrayListOf(
-+//            HomeData(R.drawable.my_document, "제목1", "100만원", "10%"),
-+//            HomeData(R.drawable.my_document, "제목2", "200만원", "20%"),
-+//            HomeData(R.drawable.my_document, "제목3", "300만원", "30%"),
-+//            HomeData(R.drawable.my_document, "제목4", "400만원", "40%")
-+//        )
-+
- 
-         // OnClickListener
--        val adapter = HomeAdapter(requireContext(), homeList)
- 
--        adapter.setItemClickListener(object : HomeAdapter.OnItemClickListener{
--            override fun onClick(v: View, position: Int) {
--                activity?.let{
--                    val intent = Intent(context, SubmitActivity::class.java)
--                    startActivity(intent)
--                }
--            }
--        })
--
--        binding.rvDonation.adapter = adapter
- 
-         // 카테고리
-         binding.btnChild.setOnClickListener{
-Index: app/src/main/java/com/example/water_app/vo/HomeData.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.water_app.vo\r\n\r\ndata class HomeData(\r\n    val img: Int,\r\n    val title: String,\r\n    val money: String,\r\n    val percent: String\r\n)\r\n
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/water_app/vo/HomeData.kt b/app/src/main/java/com/example/water_app/vo/HomeData.kt
---- a/app/src/main/java/com/example/water_app/vo/HomeData.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
-+++ b/app/src/main/java/com/example/water_app/vo/HomeData.kt	(date 1672729520071)
-@@ -2,7 +2,7 @@
- 
- data class HomeData(
-     val img: Int,
--    val title: String,
--    val money: String,
-+    val cntr_ttl: String,
-+    val cntr_obctr: String,
-     val percent: String
- )
-Index: app/src/main/java/com/example/water_app/repository/SimpleApi.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.water_app.repository\r\n\r\nimport com.example.water_app.vo.HistoryData\r\nimport com.example.water_app.vo.PostData\r\nimport com.example.water_app.vo.UserData\r\nimport retrofit2.Response\r\nimport retrofit2.http.GET\r\nimport retrofit2.http.Path\r\nimport retrofit2.http.Query\r\n\r\ninterface SimpleApi {\r\n    @GET(\"test2.php\")\r\n    suspend fun getUser(): Response<UserData>\r\n\r\n    @GET(\"test3.php\")\r\n    suspend fun getCntr(): Response<PostData>\r\n\r\n    @GET(\"test.php\")\r\n    suspend fun getHistory(@Query(\"use_yn\") use_yn: Char): Response<List<HistoryData>>\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/water_app/repository/SimpleApi.kt b/app/src/main/java/com/example/water_app/repository/SimpleApi.kt
---- a/app/src/main/java/com/example/water_app/repository/SimpleApi.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
-+++ b/app/src/main/java/com/example/water_app/repository/SimpleApi.kt	(date 1672729302547)
-@@ -1,6 +1,7 @@
- package com.example.water_app.repository
- 
- import com.example.water_app.vo.HistoryData
-+import com.example.water_app.vo.HomeData
- import com.example.water_app.vo.PostData
- import com.example.water_app.vo.UserData
- import retrofit2.Response
-@@ -17,4 +18,7 @@
- 
-     @GET("test.php")
-     suspend fun getHistory(@Query("use_yn") use_yn: Char): Response<List<HistoryData>>
-+
-+    @GET("test.php")
-+    suspend fun getHomeList(): Response<List<HomeData>>
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.water_app.viewmodel\r\n\r\nimport androidx.lifecycle.MutableLiveData\r\nimport androidx.lifecycle.ViewModel\r\nimport androidx.lifecycle.viewModelScope\r\nimport com.example.water_app.repository.Repository\r\nimport com.example.water_app.vo.HistoryData\r\nimport com.example.water_app.vo.PostData\r\nimport com.example.water_app.vo.UserData\r\nimport kotlinx.coroutines.launch\r\nimport retrofit2.Response\r\n\r\nclass MainViewModel(private val repository : Repository) : ViewModel() {\r\n    // 데이터 처리\r\n\r\n    val myResponse : MutableLiveData<Response<UserData>> = MutableLiveData()\r\n    val cntrResponse : MutableLiveData<Response<PostData>> = MutableLiveData()\r\n    val historyResponse : MutableLiveData<Response<List<HistoryData>>> = MutableLiveData()\r\n\r\n    fun getUser() {\r\n        viewModelScope.launch {\r\n            val response = repository.getUser()\r\n            myResponse.value = response\r\n        }\r\n    }\r\n    fun getCntr() {\r\n        viewModelScope.launch {\r\n            val response = repository.getCntr()\r\n            cntrResponse.value = response\r\n        }\r\n    }\r\n    fun getHistory(use_yn: Char) {\r\n        viewModelScope.launch {\r\n            val response = repository.getHistory(use_yn)\r\n            historyResponse.value = response\r\n        }\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt b/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt
---- a/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
-+++ b/app/src/main/java/com/example/water_app/viewmodel/MainViewModel.kt	(date 1672729302542)
-@@ -5,6 +5,7 @@
- import androidx.lifecycle.viewModelScope
- import com.example.water_app.repository.Repository
- import com.example.water_app.vo.HistoryData
-+import com.example.water_app.vo.HomeData
- import com.example.water_app.vo.PostData
- import com.example.water_app.vo.UserData
- import kotlinx.coroutines.launch
-@@ -16,6 +17,7 @@
-     val myResponse : MutableLiveData<Response<UserData>> = MutableLiveData()
-     val cntrResponse : MutableLiveData<Response<PostData>> = MutableLiveData()
-     val historyResponse : MutableLiveData<Response<List<HistoryData>>> = MutableLiveData()
-+    val homeResponse : MutableLiveData<Response<List<HomeData>>> = MutableLiveData()
- 
-     fun getUser() {
-         viewModelScope.launch {
-@@ -35,4 +37,10 @@
-             historyResponse.value = response
-         }
-     }
-+    fun getHomeList() {
-+        viewModelScope.launch {
-+            val response = repository.getHomeList()
-+            homeResponse.value = response
-+        }
-+    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/water_app/repository/Repository.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.water_app.repository\r\n\r\nimport com.example.water_app.vo.HistoryData\r\nimport com.example.water_app.vo.PostData\r\nimport com.example.water_app.vo.UserData\r\nimport retrofit2.Response\r\nimport retrofit2.http.Query\r\n\r\nclass Repository {\r\n    // ViewModel에서 사용할 데이터 통신\r\n\r\n    suspend fun getUser() : Response<UserData> {\r\n        return RetrofitInstance.api.getUser()\r\n    }\r\n\r\n    suspend fun getCntr() : Response<PostData> {\r\n        return RetrofitInstance.api.getCntr()\r\n    }\r\n\r\n    suspend fun getHistory(use_yn: Char) : Response<List<HistoryData>> {\r\n        return RetrofitInstance.api.getHistory(use_yn)\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/water_app/repository/Repository.kt b/app/src/main/java/com/example/water_app/repository/Repository.kt
---- a/app/src/main/java/com/example/water_app/repository/Repository.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
-+++ b/app/src/main/java/com/example/water_app/repository/Repository.kt	(date 1672729302552)
-@@ -1,6 +1,7 @@
- package com.example.water_app.repository
- 
- import com.example.water_app.vo.HistoryData
-+import com.example.water_app.vo.HomeData
- import com.example.water_app.vo.PostData
- import com.example.water_app.vo.UserData
- import retrofit2.Response
-@@ -20,4 +21,8 @@
-     suspend fun getHistory(use_yn: Char) : Response<List<HistoryData>> {
-         return RetrofitInstance.api.getHistory(use_yn)
-     }
-+
-+    suspend fun getHomeList() : Response<List<HomeData>> {
-+        return RetrofitInstance.api.getHomeList()
-+    }
- }
-\ No newline at end of file
-Index: app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt
-IDEA additional info:
-Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
-<+>package com.example.water_app.recyclerview\r\n\r\nimport android.content.Context\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.ImageView\r\nimport android.widget.TextView\r\nimport androidx.recyclerview.widget.RecyclerView\r\nimport com.example.water_app.R\r\nimport com.example.water_app.databinding.ItemHistoryRecyclerBinding\r\nimport com.example.water_app.databinding.ItemMainRecyclerBinding\r\nimport com.example.water_app.vo.HomeData\r\n\r\nclass HomeAdapter(private val context: Context, private val donationList: ArrayList<HomeData>) : RecyclerView.Adapter<HomeAdapter.ViewHolder>() {\r\n\r\n    class ViewHolder(val binding: ItemMainRecyclerBinding) : RecyclerView.ViewHolder(binding.root)\r\n\r\n    // 아이템 레이아웃 설정\r\n    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): HomeAdapter.ViewHolder {\r\n        val binding = ItemMainRecyclerBinding.inflate(LayoutInflater.from(parent.context), parent, false)\r\n        return ViewHolder(binding)\r\n    }\r\n\r\n    // 내용 입력\r\n    override fun onBindViewHolder(holder: HomeAdapter.ViewHolder, position: Int) {\r\n        holder.binding.ivImage.setImageResource(donationList.get(position).img)\r\n        holder.binding.tvTitle.text = donationList.get(position).title\r\n        holder.binding.tvMoney.text = donationList.get(position).money\r\n        holder.binding.tvPercent.text = donationList.get(position).percent\r\n\r\n        holder.itemView.setOnClickListener {\r\n            itemClickListener.onClick(it, position)\r\n        }\r\n    }\r\n\r\n    // 리스트 내 아이템 개수\r\n    override fun getItemCount(): Int {\r\n        return donationList.size\r\n    }\r\n\r\n    // OnClickListener\r\n    interface OnItemClickListener {\r\n        fun onClick(v: View, position: Int)\r\n    }\r\n\r\n    private lateinit var itemClickListener : OnItemClickListener\r\n\r\n    fun setItemClickListener(itemClickListener: OnItemClickListener) {\r\n        this.itemClickListener = itemClickListener\r\n    }\r\n}
-Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
-<+>UTF-8
-===================================================================
-diff --git a/app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt b/app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt
---- a/app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt	(revision d68b1550b7cc8d47a4785259bcb8d88f78808c00)
-+++ b/app/src/main/java/com/example/water_app/recyclerview/HomeAdapter.kt	(date 1672729520064)
-@@ -12,7 +12,7 @@
- import com.example.water_app.databinding.ItemMainRecyclerBinding
- import com.example.water_app.vo.HomeData
- 
--class HomeAdapter(private val context: Context, private val donationList: ArrayList<HomeData>) : RecyclerView.Adapter<HomeAdapter.ViewHolder>() {
-+class HomeAdapter(private val context: Context, private val donationList: List<HomeData>) : RecyclerView.Adapter<HomeAdapter.ViewHolder>() {
- 
-     class ViewHolder(val binding: ItemMainRecyclerBinding) : RecyclerView.ViewHolder(binding.root)
- 
-@@ -25,9 +25,9 @@
-     // 내용 입력
-     override fun onBindViewHolder(holder: HomeAdapter.ViewHolder, position: Int) {
-         holder.binding.ivImage.setImageResource(donationList.get(position).img)
--        holder.binding.tvTitle.text = donationList.get(position).title
--        holder.binding.tvMoney.text = donationList.get(position).money
--        holder.binding.tvPercent.text = donationList.get(position).percent
-+        holder.binding.tvTitle.text = donationList.get(position).cntr_ttl
-+        holder.binding.tvMoney.text = donationList.get(position).cntr_obctr
-+        holder.binding.tvPercent.text = donationList.get(position)?.percent
- 
-         holder.itemView.setOnClickListener {
-             itemClickListener.onClick(it, position)
Index: app/src/main/java/com/example/water_app/main/MyPageFragment.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.main\r\n\r\nimport android.annotation.SuppressLint\r\nimport android.app.AlertDialog\r\nimport android.content.Context\r\nimport android.content.Intent\r\nimport android.net.Uri\r\nimport android.os.Bundle\r\nimport androidx.fragment.app.Fragment\r\nimport android.view.LayoutInflater\r\nimport android.view.View\r\nimport android.view.ViewGroup\r\nimport android.widget.Button\r\nimport android.widget.Toast\r\nimport androidx.activity.OnBackPressedCallback\r\nimport com.example.water_app.R\r\nimport com.example.water_app.databinding.FragmentMyPageBinding\r\nimport com.example.water_app.mypage.HistoryActivity\r\nimport com.example.water_app.mypage.MyPageActivity\r\nimport com.example.water_app.mypage.NoticeActivity\r\nimport com.example.water_app.mypage.PeriodActivity\r\nimport com.example.water_app.user.LoginActivity\r\nimport com.example.water_app.user.MySharedPreferences\r\n\r\nclass MyPageFragment : Fragment() {\r\n\r\n    // 뷰바인딩\r\n    private lateinit var binding: FragmentMyPageBinding\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n    }\r\n\r\n    @SuppressLint(\"MissingInflatedId\")\r\n    override fun onCreateView(\r\n        inflater: LayoutInflater, container: ViewGroup?,\r\n        savedInstanceState: Bundle?\r\n    ): View? {\r\n\r\n        // 뷰바인딩\r\n        binding = FragmentMyPageBinding.inflate(inflater, container, false)\r\n\r\n        val view = inflater.inflate(R.layout.fragment_my_page, null)\r\n\r\n        binding.linMyPage.setOnClickListener{\r\n            activity?.let{\r\n                val intent = Intent(context, MyPageActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n\r\n        binding.linHistory.setOnClickListener{\r\n            activity?.let{\r\n                val intent = Intent(context, HistoryActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n\r\n        binding.linPeriod.setOnClickListener{\r\n            activity?.let{\r\n                val intent = Intent(context, PeriodActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n\r\n        binding.linNotice.setOnClickListener{\r\n            activity?.let{\r\n                val intent = Intent(context, NoticeActivity::class.java)\r\n                startActivity(intent)\r\n            }\r\n        }\r\n\r\n        // Dialog\r\n        binding.linPay.setOnClickListener{\r\n            val mDialogView = LayoutInflater.from(requireContext()).inflate(R.layout.mypage_pay, null)\r\n            val mBuilder = AlertDialog.Builder(requireContext())\r\n                .setView(mDialogView)\r\n\r\n            val  mAlertDialog = mBuilder.show()\r\n\r\n            val okButton = mDialogView.findViewById<Button>(R.id.btnCall)\r\n            okButton.setOnClickListener {\r\n\r\n                Toast.makeText(requireContext(),\"서비스 준비중\", Toast.LENGTH_LONG).show()\r\n            }\r\n\r\n            val noButton = mDialogView.findViewById<Button>(R.id.btnBackCall)\r\n            noButton.setOnClickListener {\r\n                mAlertDialog.dismiss()\r\n            }\r\n\r\n            val outButton = mDialogView.findViewById<Button>(R.id.btnOut)\r\n            outButton.setOnClickListener {\r\n\r\n                Toast.makeText(requireContext(),\"서비스 준비중\", Toast.LENGTH_LONG).show()\r\n            }\r\n        }\r\n\r\n        binding.linCall.setOnClickListener{\r\n            val mDialogView = LayoutInflater.from(requireContext()).inflate(R.layout.mypage_call, null)\r\n            val mBuilder = AlertDialog.Builder(requireContext())\r\n                .setView(mDialogView)\r\n\r\n            val  mAlertDialog = mBuilder.show()\r\n\r\n            val okButton = mDialogView.findViewById<Button>(R.id.btnCall)\r\n            okButton.setOnClickListener {\r\n\r\n                val intent = Intent(Intent.ACTION_VIEW, Uri.parse(\"tel:0531111111\"))\r\n                startActivity(intent)\r\n            }\r\n\r\n            val noButton = mDialogView.findViewById<Button>(R.id.btnBackCall)\r\n            noButton.setOnClickListener {\r\n                mAlertDialog.dismiss()\r\n            }\r\n        }\r\n\r\n        binding.linMoney.setOnClickListener{\r\n            val mDialogView = LayoutInflater.from(requireContext()).inflate(R.layout.mypage_money, null)\r\n            val mBuilder = AlertDialog.Builder(requireContext())\r\n                .setView(mDialogView)\r\n\r\n            val  mAlertDialog = mBuilder.show()\r\n\r\n            val noButton = mDialogView.findViewById<Button>(R.id.btnBackCall)\r\n            noButton.setOnClickListener {\r\n                mAlertDialog.dismiss()\r\n            }\r\n        }\r\n\r\n        binding.linlogout.setOnClickListener{\r\n            MySharedPreferences.clearUser(requireContext())\r\n            val intent = Intent(context, LoginActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n        return binding.root\r\n    }\r\n    // 뒤로가기 메인 고정\r\n    private lateinit var callback: OnBackPressedCallback\r\n    lateinit var mainActivity: MainActivity\r\n\r\n    // 뒤로가기 고정\r\n    override fun onAttach(context: Context) {\r\n        super.onAttach(context)\r\n        callback = object : OnBackPressedCallback(true) {\r\n            override fun handleOnBackPressed() {\r\n            }\r\n        }\r\n        requireActivity().onBackPressedDispatcher.addCallback(this, callback)\r\n\r\n        mainActivity = context as MainActivity\r\n    }\r\n\r\n    // 뒤로가기 고정\r\n    override fun onDetach() {\r\n        super.onDetach()\r\n        callback.remove()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/main/MyPageFragment.kt b/app/src/main/java/com/example/water_app/main/MyPageFragment.kt
--- a/app/src/main/java/com/example/water_app/main/MyPageFragment.kt	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ b/app/src/main/java/com/example/water_app/main/MyPageFragment.kt	(date 1673336114556)
@@ -19,8 +19,6 @@
 import com.example.water_app.mypage.MyPageActivity
 import com.example.water_app.mypage.NoticeActivity
 import com.example.water_app.mypage.PeriodActivity
-import com.example.water_app.user.LoginActivity
-import com.example.water_app.user.MySharedPreferences
 
 class MyPageFragment : Fragment() {
 
Index: app/src/main/java/com/example/water_app/user/LoginActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.user\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.util.Log\r\nimport android.widget.Toast\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport androidx.lifecycle.Observer\r\nimport androidx.lifecycle.ViewModelProvider\r\nimport com.example.water_app.R\r\nimport com.example.water_app.databinding.ActivityLoginBinding\r\nimport com.example.water_app.main.MainActivity\r\nimport com.example.water_app.repository.Repository\r\nimport com.example.water_app.viewmodel.MainViewModel\r\nimport com.example.water_app.viewmodel.MainViewModelFactory\r\nimport kotlinx.android.synthetic.main.activity_join.*\r\nimport kotlinx.android.synthetic.main.activity_login.*\r\nimport org.json.JSONException\r\nimport org.json.JSONObject\r\nimport retrofit2.Call\r\nimport retrofit2.Callback\r\nimport retrofit2.Response\r\nimport retrofit2.Retrofit\r\nimport retrofit2.converter.scalars.ScalarsConverterFactory\r\n\r\nclass LoginActivity : AppCompatActivity() {\r\n\r\n    private lateinit var binding: ActivityLoginBinding\r\n\r\n    private lateinit var viewModel : MainViewModel\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_login)\r\n\r\n        // 뷰바인딩\r\n        binding = ActivityLoginBinding.inflate(layoutInflater)\r\n        setContentView(binding.root)\r\n\r\n//        // SharedPreferences 안에 값이 저장되어 있지 않을 때 -> Login\r\n//        if(MySharedPreferences.getUserId(this).isNullOrBlank()\r\n//            || MySharedPreferences.getUserPass(this).isNullOrBlank()) {\r\n//            loginUser()\r\n//        }\r\n//        else { // SharedPreferences 안에 값이 저장되어 있을 때 -> MainActivity로 이동\r\n//            Toast.makeText(this, \"${MySharedPreferences.getUserId(this)}님 자동 로그인 되었습니다.\", Toast.LENGTH_SHORT).show()\r\n//                val intent = Intent(this, MainActivity::class.java)\r\n//            startActivity(intent)\r\n//            finish()\r\n//        }\r\n\r\n        binding.btnBack.setOnClickListener{\r\n            super.onBackPressed()\r\n        }\r\n\r\n        binding.btnJoin.setOnClickListener{\r\n            val intent = Intent(this, JoinActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n\r\n        binding.btnLogin.setOnClickListener{\r\n\r\n            val intent = Intent(this, MainActivity::class.java)\r\n            startActivity(intent)\r\n        }\r\n    }\r\n\r\n    private fun successLogin(){\r\n//\r\n//        val repository = Repository()\r\n//        val viewModelFactory = MainViewModelFactory(repository)\r\n//\r\n////        val mbr_sn = this.intent.extras?.getString(\"mbr_sn\")\r\n//\r\n//        viewModel = ViewModelProvider(this,viewModelFactory).get(MainViewModel::class.java)\r\n//        viewModel.getLogin()\r\n//        viewModel.loginResponse.observe(this, Observer {\r\n//            if(it.isSuccessful) {\r\n//                MySharedPreferences.setUserId(this, it.body()?.mbr_id.toString())\r\n//                MySharedPreferences.setUserPass(this, it.body()?.mbr_password.toString())\r\n//                MySharedPreferences.setUserSn(this, it.body()?.mbr_sn.toString())\r\n//                Log.d(\"test----------->1\",\"${MySharedPreferences.getUserSn(this)}\")\r\n//            }\r\n//            else{\r\n//                Log.d(\"Response\",it.errorBody().toString())\r\n//            }\r\n//        })\r\n//\r\n//        MySharedPreferences.setUserId(this, binding.edtEmail!!.text.toString())\r\n//        MySharedPreferences.setUserPass(this, binding.edtPassword!!.text.toString())\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/user/LoginActivity.kt b/app/src/main/java/com/example/water_app/user/LoginActivity.kt
--- a/app/src/main/java/com/example/water_app/user/LoginActivity.kt	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ b/app/src/main/java/com/example/water_app/user/LoginActivity.kt	(date 1672987293912)
@@ -5,14 +5,9 @@
 import android.util.Log
 import android.widget.Toast
 import androidx.appcompat.app.AppCompatActivity
-import androidx.lifecycle.Observer
-import androidx.lifecycle.ViewModelProvider
 import com.example.water_app.R
 import com.example.water_app.databinding.ActivityLoginBinding
 import com.example.water_app.main.MainActivity
-import com.example.water_app.repository.Repository
-import com.example.water_app.viewmodel.MainViewModel
-import com.example.water_app.viewmodel.MainViewModelFactory
 import kotlinx.android.synthetic.main.activity_join.*
 import kotlinx.android.synthetic.main.activity_login.*
 import org.json.JSONException
@@ -25,30 +20,19 @@
 
 class LoginActivity : AppCompatActivity() {
 
+    private val TAG = "LoginActivity"
     private lateinit var binding: ActivityLoginBinding
-
-    private lateinit var viewModel : MainViewModel
+    private var preferenceHelper: PreferenceHelper? = null
 
     override fun onCreate(savedInstanceState: Bundle?) {
         super.onCreate(savedInstanceState)
         setContentView(R.layout.activity_login)
+        preferenceHelper = PreferenceHelper(this)
 
         // 뷰바인딩
         binding = ActivityLoginBinding.inflate(layoutInflater)
         setContentView(binding.root)
 
-//        // SharedPreferences 안에 값이 저장되어 있지 않을 때 -> Login
-//        if(MySharedPreferences.getUserId(this).isNullOrBlank()
-//            || MySharedPreferences.getUserPass(this).isNullOrBlank()) {
-//            loginUser()
-//        }
-//        else { // SharedPreferences 안에 값이 저장되어 있을 때 -> MainActivity로 이동
-//            Toast.makeText(this, "${MySharedPreferences.getUserId(this)}님 자동 로그인 되었습니다.", Toast.LENGTH_SHORT).show()
-//                val intent = Intent(this, MainActivity::class.java)
-//            startActivity(intent)
-//            finish()
-//        }
-
         binding.btnBack.setOnClickListener{
             super.onBackPressed()
         }
@@ -59,35 +43,64 @@
         }
 
         binding.btnLogin.setOnClickListener{
-
+            loginUser()
             val intent = Intent(this, MainActivity::class.java)
             startActivity(intent)
         }
     }
 
-    private fun successLogin(){
-//
-//        val repository = Repository()
-//        val viewModelFactory = MainViewModelFactory(repository)
-//
-////        val mbr_sn = this.intent.extras?.getString("mbr_sn")
-//
-//        viewModel = ViewModelProvider(this,viewModelFactory).get(MainViewModel::class.java)
-//        viewModel.getLogin()
-//        viewModel.loginResponse.observe(this, Observer {
-//            if(it.isSuccessful) {
-//                MySharedPreferences.setUserId(this, it.body()?.mbr_id.toString())
-//                MySharedPreferences.setUserPass(this, it.body()?.mbr_password.toString())
-//                MySharedPreferences.setUserSn(this, it.body()?.mbr_sn.toString())
-//                Log.d("test----------->1","${MySharedPreferences.getUserSn(this)}")
-//            }
-//            else{
-//                Log.d("Response",it.errorBody().toString())
-//            }
-//        })
-//
-//        MySharedPreferences.setUserId(this, binding.edtEmail!!.text.toString())
-//        MySharedPreferences.setUserPass(this, binding.edtPassword!!.text.toString())
+    private fun loginUser() {
+        val mbr_id = binding.edtEmail!!.text.toString().trim { it <= ' ' }
+        val mbr_password = binding.edtPassword!!.text.toString().trim { it <= ' ' }
+
+        val retrofit = Retrofit.Builder()
+            .baseUrl(UserInterface.USER_URL)
+            .addConverterFactory(ScalarsConverterFactory.create())
+            .build()
+
+        val api = retrofit.create(UserInterface::class.java)
+        val call = api.getUserLogin(mbr_id, mbr_password)
+        call!!.enqueue(object : Callback<String?> {
+            override fun onResponse(call: Call<String?>, response: Response<String?>) {
+                if (response.isSuccessful && response.body() != null) {
+                    Log.e("onSuccess", response.body()!!)
+                    val jsonResponse = response.body()
+                    parseLoginData(jsonResponse)
+                }
+            }
+
+            override fun onFailure(call: Call<String?>, t: Throwable) {
+                Log.e(TAG, "에러 = " + t.message)
+            }
+        })
+    }
+
+    private fun parseLoginData(response: String?) {
+        try {
+            val jsonObject = JSONObject(response)
+            if (jsonObject.getString("status") == "true") {
+                saveInfo(response)
+                Toast.makeText(this@LoginActivity, "Login Successfully!", Toast.LENGTH_SHORT).show()
+            }
+        } catch (e: JSONException) {
+            e.printStackTrace()
+        }
     }
 
+    private fun saveInfo(response: String?) {
+        preferenceHelper!!.putIsLogin(true)
+        try {
+            val jsonObject = JSONObject(response)
+            if (jsonObject.getString("status") == "true") {
+                val dataArray = jsonObject.getJSONArray("data")
+                for (i in 0 until dataArray.length()) {
+                    val dataobj = dataArray.getJSONObject(i)
+                    preferenceHelper!!.putId(dataobj.getString("mbr_id"))
+                    preferenceHelper!!.putPass(dataobj.getString("mbr_pass"))
+                }
+            }
+        } catch (e: JSONException) {
+            e.printStackTrace()
+        }
+    }
 }
\ No newline at end of file
Index: app/src/main/java/com/example/water_app/user/PreferenceHelper.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/user/PreferenceHelper.kt b/app/src/main/java/com/example/water_app/user/PreferenceHelper.kt
new file mode 100644
--- /dev/null	(date 1672987293912)
+++ b/app/src/main/java/com/example/water_app/user/PreferenceHelper.kt	(date 1672987293912)
@@ -0,0 +1,105 @@
+package com.example.water_app.user
+
+import android.content.Context
+import android.content.SharedPreferences
+
+class PreferenceHelper(context: Context) {
+    private val INTRO = "intro"
+    private val ID = "mbr_id"
+    private val PASS = "mbr_password"
+    private val NAME = "mbr_nm"
+    private val NICK = "mbr_ncnm"
+    private val GEN = "mbr_gen"
+    private val TEL = "mbr_tel"
+    private val BIRTH = "mbr_brthdy"
+    private val EMAIL = "mbr_email"
+
+    private val app_prefs: SharedPreferences
+    private val context: Context
+
+    init {
+        app_prefs = context.getSharedPreferences("shared", 0)
+        this.context = context
+    }
+
+    fun putIsLogin(loginOrOut: Boolean) {
+        val edit = app_prefs.edit()
+        edit.putBoolean(INTRO, loginOrOut)
+        edit.apply()
+    }
+
+    fun putId(loginOrOut: String?) {
+        val edit = app_prefs.edit()
+        edit.putString(ID, loginOrOut)
+        edit.apply()
+    }
+
+    val mbr_id: String?
+        get() = app_prefs.getString(ID, "")
+
+    fun putPass(loginOrOut: String?) {
+        val edit = app_prefs.edit()
+        edit.putString(PASS, loginOrOut)
+        edit.apply()
+    }
+
+    val mbr_password: String?
+        get() = app_prefs.getString(PASS, "")
+
+    fun putName(loginOrOut: String?) {
+        val edit = app_prefs.edit()
+        edit.putString(NAME, loginOrOut)
+        edit.apply()
+    }
+
+    val mbr_nm: String?
+        get() = app_prefs.getString(NAME, "")
+
+    fun putNick(loginOrOut: String?) {
+        val edit = app_prefs.edit()
+        edit.putString(NICK, loginOrOut)
+        edit.apply()
+    }
+
+    val mbr_ncnm: String?
+        get() = app_prefs.getString(NICK, "")
+
+    fun putGen(loginOrOut: String?) {
+        val edit = app_prefs.edit()
+        edit.putString(GEN, loginOrOut)
+        edit.apply()
+    }
+
+    val mbr_gen: String?
+        get() = app_prefs.getString(GEN, "")
+
+    fun putTel(loginOrOut: String?) {
+        val edit = app_prefs.edit()
+        edit.putString(TEL, loginOrOut)
+        edit.apply()
+    }
+
+    val mbr_tel: String?
+        get() = app_prefs.getString(TEL, "")
+
+    fun putBirth(loginOrOut: String?) {
+        val edit = app_prefs.edit()
+        edit.putString(BIRTH, loginOrOut)
+        edit.apply()
+    }
+
+    val mbr_brthdy: String?
+        get() = app_prefs.getString(BIRTH, "")
+
+    fun putEmail(loginOrOut: String?) {
+        val edit = app_prefs.edit()
+        edit.putString(EMAIL, loginOrOut)
+        edit.apply()
+    }
+
+    val mbr_email: String?
+        get() = app_prefs.getString(EMAIL, "")
+
+
+
+}
\ No newline at end of file
Index: app/src/main/java/com/example/water_app/user/UserInterface.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/user/UserInterface.kt b/app/src/main/java/com/example/water_app/user/UserInterface.kt
new file mode 100644
--- /dev/null	(date 1672987293913)
+++ b/app/src/main/java/com/example/water_app/user/UserInterface.kt	(date 1672987293913)
@@ -0,0 +1,33 @@
+package com.example.water_app.user
+
+import retrofit2.Call
+import retrofit2.http.Field
+import retrofit2.http.FormUrlEncoded
+import retrofit2.http.POST
+
+interface UserInterface {
+
+    companion object {
+        const val USER_URL = "http://10.1.4.121/"
+    }
+
+    @FormUrlEncoded
+    @POST("join.php")
+    fun getUserRegist(
+        @Field("mbr_id") mbr_id: String?,
+        @Field("mbr_password") mbr_password: String?,
+        @Field("mbr_nm") mbr_nm: String?,
+        @Field("mbr_ncnm") mbr_ncnm: String?,
+        @Field("mbr_gen") mbr_gen: Char,
+        @Field("mbr_tel") mbr_tel: String?,
+        @Field("mbr_brthdy") mbr_brthdy: String?,
+        @Field("mbr_email") mbr_email: String?
+    ): Call<String?>?
+
+    @FormUrlEncoded
+    @POST("login.php")
+    fun getUserLogin(
+        @Field("mbr_id") mbr_id: String?,
+        @Field("mbr_password") mbr_password: String?
+    ): Call<String?>?
+}
\ No newline at end of file
Index: app/src/main/java/com/example/water_app/etc/SplashActivity.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.water_app.etc\r\n\r\nimport android.content.Intent\r\nimport android.os.Bundle\r\nimport android.os.Handler\r\nimport androidx.appcompat.app.AppCompatActivity\r\nimport com.example.water_app.R\r\nimport com.example.water_app.user.LoginActivity\r\n\r\nclass SplashActivity : AppCompatActivity() {\r\n\r\n    override fun onCreate(savedInstanceState: Bundle?) {\r\n        super.onCreate(savedInstanceState)\r\n        setContentView(R.layout.activity_splash)\r\n\r\n        val handler = Handler()\r\n        handler.postDelayed({\r\n            val intent = Intent(applicationContext, LoginActivity::class.java)\r\n            startActivity(intent)\r\n            finish()\r\n        }, 1500)\r\n    }\r\n\r\n    override fun onPause() {\r\n        super.onPause()\r\n        finish()\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/example/water_app/etc/SplashActivity.kt b/app/src/main/java/com/example/water_app/etc/SplashActivity.kt
--- a/app/src/main/java/com/example/water_app/etc/SplashActivity.kt	(revision ad9592beac843876fbd8fa434a0a2c994a2bc5f6)
+++ b/app/src/main/java/com/example/water_app/etc/SplashActivity.kt	(date 1673336114572)
@@ -5,7 +5,6 @@
 import android.os.Handler
 import androidx.appcompat.app.AppCompatActivity
 import com.example.water_app.R
-import com.example.water_app.user.LoginActivity
 
 class SplashActivity : AppCompatActivity() {
 
